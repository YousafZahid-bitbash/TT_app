{"ast":null,"code":"var _jsxFileName = \"/Users/zeghamali/Desktop/TT_shop_Dashboard/frontend/src/components/ShopPerformance.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ShoppingCart, TrendingUp, Package, AlertCircle, Calendar, DollarSign } from 'lucide-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopPerformance = () => {\n  _s();\n  const [yesterdayData, setYesterdayData] = useState({});\n  const [currentWeekData, setCurrentWeekData] = useState({});\n  const [monthToDateData, setMonthToDateData] = useState({});\n  const [dates, setDates] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [data, setData] = useState(null);\n  const fetchPerformance = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/shop/performance', {\n        params: {\n          start_time: dates.startDate,\n          // use selected start date\n          end_time: dates.endDate,\n          // use selected end date\n          page_size: 10,\n          page_no: 1\n        }\n      });\n      setData(response.data);\n    } catch (error) {\n      console.error('API call error:', error);\n    }\n  };\n\n  // Helper function to format dates as 'YYYY-MM-DD'\n  const formatDate = date => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // Helper function to get the start of the current week (Monday)\n  const getStartOfWeek = date => {\n    const startOfWeek = new Date(date);\n    const day = startOfWeek.getDay();\n    const diff = startOfWeek.getDate() - day + (day === 0 ? -6 : 1); // Adjust if it's Sunday\n    startOfWeek.setDate(diff);\n    return formatDate(startOfWeek);\n  };\n\n  // Helper function to get the start of the current month\n  const getStartOfMonth = date => {\n    const startOfMonth = new Date(date);\n    startOfMonth.setDate(1); // Set the date to the 1st of the month\n    return formatDate(startOfMonth);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const currentDate = new Date();\n\n        // Get yesterday's date\n        const yesterday = new Date(currentDate);\n        yesterday.setDate(currentDate.getDate() - 1);\n        const formattedYesterday = formatDate(yesterday);\n\n        // Get start and end of current week\n        const startOfWeek = getStartOfWeek(currentDate);\n        const formattedEndOfWeek = formatDate(new Date(currentDate)); // current day is the end of the week\n\n        // Get start of the current month\n        const startOfMonth = getStartOfMonth(currentDate);\n        const formattedEndOfMonth = formatDate(currentDate); // current day is the end of the month\n\n        // Fetch performance data (GMV, flash sales, etc.) for yesterday\n        const yesterdayPerformanceResponse = await axios.get('http://127.0.0.1:8000/shop/performance', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch performance data (GMV, flash sales, etc.) for the current week\n        const currentWeekPerformanceResponse = await axios.get('http://127.0.0.1:8000/shop/performance', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch performance data (GMV, flash sales, etc.) for the current month\n        const monthToDatePerformanceResponse = await axios.get('http://127.0.0.1:8000/shop/performance', {\n          params: {\n            start_time: startOfMonth,\n            end_time: formattedEndOfMonth,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        //fetch flash sales performance \n        const yesterdayflashsales = await axios.get('http://127.0.0.1:8000/flash_sales_performance', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        //fetch flash sales performance \n        const currentWeekflashsales = await axios.get('http://127.0.0.1:8000/flash_sales_performance', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        //fetch flash sales performance \n        const monthToDateflashsales = await axios.get('http://127.0.0.1:8000/flash_sales_performance', {\n          params: {\n            start_time: startOfMonth,\n            end_time: formattedEndOfMonth,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const compain = await axios.get('http://127.0.0.1:8000/shop/performance', {\n          params: {\n            start_time: dates.startDate,\n            end_time: dates.endDate,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch top-performing creators for each period (Yesterday, Current Week, and Month to Date)\n        const dailycreatorsResponse = await axios.get('http://127.0.0.1:8000/top_performing_creators', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const weaklycreatorsResponse = await axios.get('http://127.0.0.1:8000/top_performing_creators', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const monthlycreatorsResponse = await axios.get('http://127.0.0.1:8000/top_performing_creators', {\n          params: {\n            start_date: startOfMonth,\n            // Start of current month\n            end_date: formattedEndOfMonth,\n            // End of current month (today)\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const dailygmvPervideo = await axios.get('http://127.0.0.1:8000//Gmv_per_video', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const weeklygmvPervideo = await axios.get('http://127.0.0.1:8000//Gmv_per_video', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const monthlygmvPervideo = await axios.get('http://127.0.0.1:8000//Gmv_per_video', {\n          params: {\n            start_date: startOfMonth,\n            // Start of current month\n            end_date: formattedEndOfMonth,\n            // End of current month (today)\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const dailyRefundrate = await axios.get('http://127.0.0.1:8000//calculate_refund_rate', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const weeklyRefundrate = await axios.get('http://127.0.0.1:8000//calculate_refund_rate', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const monthlyRefundrate = await axios.get('http://127.0.0.1:8000//calculate_refund_rate', {\n          params: {\n            start_date: startOfMonth,\n            // Start of current month\n            end_date: formattedEndOfMonth,\n            // End of current month (today)\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Update the dashboard state with the fetched data\n        setYesterdayData({\n          totalGmv: yesterdayPerformanceResponse.data.gmv,\n          flashSalesPerformance: yesterdayflashsales.data.total_sales,\n          // Example value for flash sales\n          topPerformingCreators: dailycreatorsResponse.data.top_creators.length,\n          gmvpervideo: dailygmvPervideo.data.gmv,\n          refundrate: dailyRefundrate.data.refund_rate,\n          Tiktokcompaign: compain.data.gmv\n        });\n        setCurrentWeekData({\n          totalGmv: currentWeekPerformanceResponse.data.gmv,\n          flashSalesPerformance: currentWeekflashsales.data.total_sales,\n          // Example value for flash sales\n          topPerformingCreators: weaklycreatorsResponse.data.top_creators.length,\n          gmvpervideo: weeklygmvPervideo.data.gmv,\n          refundrate: weeklyRefundrate.data.refund_rate,\n          Tiktokcompaign: compain.data.gmv\n        });\n        setMonthToDateData({\n          totalGmv: monthToDatePerformanceResponse.data.gmv,\n          flashSalesPerformance: monthToDateflashsales.data.total_sales,\n          // Example value for flash sales\n          topPerformingCreators: monthlycreatorsResponse.data.top_creators.length,\n          gmvpervideo: monthlygmvPervideo.data.gmv,\n          refundrate: monthlyRefundrate.data.refund_rate,\n          Tiktokcompaign: compain.data.gmv\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n  const calculatePercentage = (value, total) => {\n    if (total === 0) return '0.0%';\n    return (value / total * 100).toFixed(1) + '%';\n  };\n  const renderTable = (data, title, period, bgColor) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `table-header ${bgColor}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"period\",\n        children: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"TOTAL GMV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: formatCurrency(data.totalGmv)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"FLASH SALES PERFORMANCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: formatCurrency(data.flashSalesPerformance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"TOP-PERFORMING CREATORS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: data.topPerformingCreators\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"GMV PER VIDEO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: data.gmvpervideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Refund Rate \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: data.refundrate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Tiktok Compaign outcome \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: data.Tiktokcompaign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 6\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables-container\",\n      children: [renderTable(yesterdayData, 'Yesterday', `Yesterday (${formatDate(new Date())})`, 'header-blue'), renderTable(currentWeekData, 'Current Week', `Week (${getStartOfWeek(new Date())} - ${formatDate(new Date())})`, 'header-green'), renderTable(monthToDateData, 'Month to date', `Month (${getStartOfMonth(new Date())} - ${formatDate(new Date())})`, 'header-red')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 6\n  }, this);\n};\n_s(ShopPerformance, \"xenOSngM4kuYTyFAHaMVzpH6IMc=\");\n_c = ShopPerformance;\nexport default ShopPerformance;\nvar _c;\n$RefreshReg$(_c, \"ShopPerformance\");","map":{"version":3,"names":["React","useEffect","useState","ShoppingCart","TrendingUp","Package","AlertCircle","Calendar","DollarSign","axios","jsxDEV","_jsxDEV","ShopPerformance","_s","yesterdayData","setYesterdayData","currentWeekData","setCurrentWeekData","monthToDateData","setMonthToDateData","dates","setDates","startDate","endDate","data","setData","fetchPerformance","response","get","params","start_time","end_time","page_size","page_no","error","console","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","getStartOfWeek","startOfWeek","Date","getDay","diff","setDate","getStartOfMonth","startOfMonth","fetchData","currentDate","yesterday","formattedYesterday","formattedEndOfWeek","formattedEndOfMonth","yesterdayPerformanceResponse","currentWeekPerformanceResponse","monthToDatePerformanceResponse","yesterdayflashsales","currentWeekflashsales","monthToDateflashsales","compain","dailycreatorsResponse","weaklycreatorsResponse","monthlycreatorsResponse","start_date","end_date","dailygmvPervideo","weeklygmvPervideo","monthlygmvPervideo","dailyRefundrate","weeklyRefundrate","monthlyRefundrate","totalGmv","gmv","flashSalesPerformance","total_sales","topPerformingCreators","top_creators","length","gmvpervideo","refundrate","refund_rate","Tiktokcompaign","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","calculatePercentage","value","total","toFixed","renderTable","title","period","bgColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeghamali/Desktop/TT_shop_Dashboard/frontend/src/components/ShopPerformance.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ShoppingCart, TrendingUp, Package, AlertCircle, Calendar, DollarSign } from 'lucide-react';\nimport axios from 'axios';\nconst ShopPerformance = () => {\n  const [yesterdayData, setYesterdayData] = useState({});\n   const [currentWeekData, setCurrentWeekData] = useState({});\n   const [monthToDateData, setMonthToDateData] = useState({});\n   const [dates, setDates] = useState({ startDate: '', endDate: '' });\n   const [data, setData] = useState(null);\n \n   const fetchPerformance = async () => {\n     try {\n       const response = await axios.get('http://127.0.0.1:8000/shop/performance', {\n         params: {\n           start_time: dates.startDate, // use selected start date\n           end_time: dates.endDate,     // use selected end date\n           page_size: 10,\n           page_no: 1,\n         },\n       });\n       setData(response.data);\n     } catch (error) {\n       console.error('API call error:', error);\n     }\n   };\n \n   // Helper function to format dates as 'YYYY-MM-DD'\n   const formatDate = (date) => {\n     const year = date.getFullYear();\n     const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n     const day = String(date.getDate()).padStart(2, '0');\n     return `${year}-${month}-${day}`;\n   };\n \n   // Helper function to get the start of the current week (Monday)\n   const getStartOfWeek = (date) => {\n     const startOfWeek = new Date(date);\n     const day = startOfWeek.getDay();\n     const diff = startOfWeek.getDate() - day + (day === 0 ? -6 : 1); // Adjust if it's Sunday\n     startOfWeek.setDate(diff);\n     return formatDate(startOfWeek);\n   };\n \n   // Helper function to get the start of the current month\n   const getStartOfMonth = (date) => {\n     const startOfMonth = new Date(date);\n     startOfMonth.setDate(1); // Set the date to the 1st of the month\n     return formatDate(startOfMonth);\n   };\n \n   useEffect(() => {\n     const fetchData = async () => {\n       try {\n         const currentDate = new Date();\n \n         // Get yesterday's date\n         const yesterday = new Date(currentDate);\n         yesterday.setDate(currentDate.getDate() - 1);\n         const formattedYesterday = formatDate(yesterday);\n \n         // Get start and end of current week\n         const startOfWeek = getStartOfWeek(currentDate);\n         const formattedEndOfWeek = formatDate(new Date(currentDate)); // current day is the end of the week\n \n         // Get start of the current month\n         const startOfMonth = getStartOfMonth(currentDate);\n         const formattedEndOfMonth = formatDate(currentDate); // current day is the end of the month\n \n         // Fetch performance data (GMV, flash sales, etc.) for yesterday\n         const yesterdayPerformanceResponse = await axios.get('http://127.0.0.1:8000/shop/performance', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         // Fetch performance data (GMV, flash sales, etc.) for the current week\n         const currentWeekPerformanceResponse = await axios.get('http://127.0.0.1:8000/shop/performance', {\n           params: {\n             start_time: startOfWeek,\n             end_time: formattedEndOfWeek,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         // Fetch performance data (GMV, flash sales, etc.) for the current month\n         const monthToDatePerformanceResponse = await axios.get('http://127.0.0.1:8000/shop/performance', {\n           params: {\n             start_time: startOfMonth,\n             end_time: formattedEndOfMonth,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         \n         //fetch flash sales performance \n         const yesterdayflashsales = await axios.get('http://127.0.0.1:8000/flash_sales_performance', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         //fetch flash sales performance \n         const currentWeekflashsales = await axios.get('http://127.0.0.1:8000/flash_sales_performance', {\n           params: {\n             start_time: startOfWeek,\n             end_time: formattedEndOfWeek,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         //fetch flash sales performance \n         const monthToDateflashsales = await axios.get('http://127.0.0.1:8000/flash_sales_performance', {\n           params: {\n             start_time: startOfMonth,\n             end_time: formattedEndOfMonth,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         const compain = await axios.get('http://127.0.0.1:8000/shop/performance', {\n           params: {\n             start_time: dates.startDate,\n             end_time: dates.endDate,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n \n         // Fetch top-performing creators for each period (Yesterday, Current Week, and Month to Date)\n         const dailycreatorsResponse = await axios.get('http://127.0.0.1:8000/top_performing_creators', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const weaklycreatorsResponse = await axios.get('http://127.0.0.1:8000/top_performing_creators', {\n           params: {\n             start_time: startOfWeek,\n             end_time: formattedEndOfWeek,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const monthlycreatorsResponse = await axios.get('http://127.0.0.1:8000/top_performing_creators', {\n           params: {\n             start_date: startOfMonth, // Start of current month\n             end_date: formattedEndOfMonth, // End of current month (today)\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         const dailygmvPervideo = await axios.get('http://127.0.0.1:8000//Gmv_per_video', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const weeklygmvPervideo = await axios.get('http://127.0.0.1:8000//Gmv_per_video', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const monthlygmvPervideo = await axios.get('http://127.0.0.1:8000//Gmv_per_video', {\n           params: {\n             start_date: startOfMonth, // Start of current month\n             end_date: formattedEndOfMonth, // End of current month (today)\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const dailyRefundrate = await axios.get('http://127.0.0.1:8000//calculate_refund_rate', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const weeklyRefundrate = await axios.get('http://127.0.0.1:8000//calculate_refund_rate', {\n           params: {\n             start_time: startOfWeek,\n             end_time: formattedEndOfWeek,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const monthlyRefundrate = await axios.get('http://127.0.0.1:8000//calculate_refund_rate', {\n           params: {\n             start_date: startOfMonth, // Start of current month\n             end_date: formattedEndOfMonth, // End of current month (today)\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         // Update the dashboard state with the fetched data\n         setYesterdayData({\n           totalGmv: yesterdayPerformanceResponse.data.gmv,\n           flashSalesPerformance: yesterdayflashsales.data.total_sales,// Example value for flash sales\n           topPerformingCreators: dailycreatorsResponse.data.top_creators.length,\n           gmvpervideo: dailygmvPervideo.data.gmv,\n           refundrate: dailyRefundrate.data.refund_rate,\n           Tiktokcompaign: compain.data.gmv\n         });\n \n         setCurrentWeekData({\n           totalGmv: currentWeekPerformanceResponse.data.gmv,\n           flashSalesPerformance: currentWeekflashsales.data.total_sales,// Example value for flash sales\n           topPerformingCreators: weaklycreatorsResponse.data.top_creators.length,\n           gmvpervideo: weeklygmvPervideo.data.gmv,\n           refundrate: weeklyRefundrate.data.refund_rate,\n           Tiktokcompaign: compain.data.gmv\n         });\n \n         setMonthToDateData({\n           totalGmv: monthToDatePerformanceResponse.data.gmv,\n           flashSalesPerformance: monthToDateflashsales.data.total_sales,// Example value for flash sales\n           topPerformingCreators: monthlycreatorsResponse.data.top_creators.length,\n           gmvpervideo: monthlygmvPervideo.data.gmv,\n           refundrate: monthlyRefundrate.data.refund_rate,\n           Tiktokcompaign: compain.data.gmv\n         });\n \n       } catch (error) {\n         console.error(\"Error fetching data:\", error);\n       }\n     };\n \n     fetchData();\n   }, []);\n \n   const formatCurrency = (amount) => {\n     return new Intl.NumberFormat('en-US', {\n       style: 'currency',\n       currency: 'USD',\n       minimumFractionDigits: 2\n     }).format(amount);\n   };\n \n   const calculatePercentage = (value, total) => {\n     if (total === 0) return '0.0%';\n     return ((value / total) * 100).toFixed(1) + '%';\n   };\n \n   const renderTable = (data, title, period, bgColor) => (\n     <div className=\"analytics-table\">\n       <div className={`table-header ${bgColor}`}>\n         <h3>{title}</h3>\n         <span className=\"period\">{period}</span>\n       </div>\n       <div className=\"table-content\">\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">TOTAL GMV</span>\n           <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n         </div>\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n           <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n         </div>\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">TOP-PERFORMING CREATORS</span>\n           <span className=\"metric-value\">{data.topPerformingCreators}</span>\n         </div>\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">GMV PER VIDEO</span>\n           <span className=\"metric-value\">{data.gmvpervideo}</span>\n         </div>\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">Refund Rate </span>\n           <span className=\"metric-value\">{data.refundrate}</span>\n         </div>\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">Tiktok Compaign outcome </span>\n           <span className=\"metric-value\">{data.Tiktokcompaign}</span>\n           {/* <DatePickerCard onDatesChange={setDates} />\n           <button\n             className=\"mt-4 bg-blue-500 text-white rounded-lg px-4 py-2\"\n             onClick={fetchPerformance}\n             disabled={!dates.startDate || !dates.endDate}\n           >\n             Get Performance\n           </button> */}\n         </div>\n       </div>\n     </div>\n \n \n   );\n \n   return (\n     <div className=\"dashboard-container\">\n       <div className=\"dashboard-header\">\n         <h1>Analytics Dashboard</h1>\n       </div>\n \n       <div className=\"tables-container\">\n         {renderTable(\n           yesterdayData,\n           'Yesterday',\n           `Yesterday (${formatDate(new Date())})`,\n           'header-blue'\n         )}\n         {renderTable(\n           currentWeekData,\n           'Current Week',\n           `Week (${getStartOfWeek(new Date())} - ${formatDate(new Date())})`,\n           'header-green'\n         )}\n         {renderTable(\n           monthToDateData,\n           'Month to date',\n           `Month (${getStartOfMonth(new Date())} - ${formatDate(new Date())})`,\n           'header-red'\n         )}\n       </div>\n     </div>\n   );\n };\n\nexport default ShopPerformance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}