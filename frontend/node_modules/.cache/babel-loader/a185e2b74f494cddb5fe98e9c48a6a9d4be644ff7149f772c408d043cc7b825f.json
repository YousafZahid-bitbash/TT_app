{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';// import { ShoppingCart, TrendingUp, Package, AlertCircle, Calendar, DollarSign } from 'lucide-react';\nimport axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ShopPerformance=()=>{const[yesterdayData,setYesterdayData]=useState({});const[currentWeekData,setCurrentWeekData]=useState({});const[monthToDateData,setMonthToDateData]=useState({});//  const [data, setData] = useState(null);\n//  const fetchPerformance = async () => {\n//    try {\n//      const response = await axios.get('/api/shop/performance', {\n//        params: {\n//          start_time: dates.startDate, // use selected start date\n//          end_time: dates.endDate,     // use selected end date\n//          page_size: 10,\n//          page_no: 1,\n//        },\n//      });\n//      setData(response.data);\n//    } catch (error) {\n//      console.error('API call error:', error);\n//    }\n//  };\n// Helper function to format dates as 'YYYY-MM-DD'\nconst formatDate=date=>{const year=date.getFullYear();const month=String(date.getMonth()+1).padStart(2,'0');// Months are 0-indexed\nconst day=String(date.getDate()).padStart(2,'0');return\"\".concat(year,\"-\").concat(month,\"-\").concat(day);};// Helper function to get the start of the current week (Monday)\nconst getStartOfWeek=useCallback(date=>{const startOfWeek=new Date(date);const day=startOfWeek.getDay();const diff=startOfWeek.getDate()-day+(day===0?-6:1);// Adjust if it's Sunday\nstartOfWeek.setDate(diff);return formatDate(startOfWeek);},[]);const getStartOfMonth=useCallback(date=>{const startOfMonth=new Date(date);startOfMonth.setDate(1);// Set the date to the 1st of the month\nreturn formatDate(startOfMonth);},[]);// Helper function to get the start of the current month\nuseEffect(()=>{const fetchData=async()=>{try{const currentDate=new Date();// Get yesterday's date\nconst yesterday=new Date(currentDate);yesterday.setDate(currentDate.getDate()-1);const formattedYesterday=formatDate(yesterday);// Get start and end of current week\nconst startOfWeek=getStartOfWeek(currentDate);const formattedEndOfWeek=formatDate(new Date(currentDate));// current day is the end of the week\n// Get start of the current month\nconst startOfMonth=getStartOfMonth(currentDate);const formattedEndOfMonth=formatDate(currentDate);// current day is the end of the month\n// Fetch performance data (GMV, flash sales, etc.) for yesterday\nconst yesterdayPerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:formattedYesterday,end_time:formattedYesterday,page_size:10,page_no:1}});// Fetch performance data (GMV, flash sales, etc.) for the current week\nconst currentWeekPerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,page_size:10,page_no:1}});// Fetch performance data (GMV, flash sales, etc.) for the current month\nconst monthToDatePerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:startOfMonth,end_time:formattedEndOfMonth,page_size:10,page_no:1}});//fetch flash sales performance \nconst yesterdayflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:formattedYesterday,end_time:formattedYesterday,page_size:10,page_no:1}});//fetch flash sales performance \nconst currentWeekflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,page_size:10,page_no:1}});//fetch flash sales performance \nconst monthToDateflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:startOfMonth,end_time:formattedEndOfMonth,page_size:10,page_no:1}});const compain=await axios.get('/api/shop/performance',{params:{start_time:getStartOfMonth(new Date()),end_time:formattedEndOfMonth,page_size:10,page_no:1}});const dailyRefundrate=await axios.get('/api//calculate_refund_rate',{params:{start_time:formattedYesterday,end_time:formattedYesterday,page_size:10,page_no:1}});const weeklyRefundrate=await axios.get('/api//calculate_refund_rate',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,page_size:10,page_no:1}});const monthlyRefundrate=await axios.get('/api//calculate_refund_rate',{params:{start_date:startOfMonth,// Start of current month\nend_date:formattedEndOfMonth,// End of current month (today)\npage_size:10,page_no:1}});// Update the dashboard state with the fetched data\nsetYesterdayData({totalGmv:yesterdayPerformanceResponse.data.gmv,flashSalesPerformance:yesterdayflashsales.data.total_sales,// Example value for flash sales\nrefundrate:dailyRefundrate.data.refund_rate,Tiktokcompaign:compain.data.gmv});setCurrentWeekData({totalGmv:currentWeekPerformanceResponse.data.gmv,flashSalesPerformance:currentWeekflashsales.data.total_sales,// Example value for flash sales\nrefundrate:weeklyRefundrate.data.refund_rate,Tiktokcompaign:compain.data.gmv});setMonthToDateData({totalGmv:monthToDatePerformanceResponse.data.gmv,flashSalesPerformance:monthToDateflashsales.data.total_sales,// Example value for flash sales\nrefundrate:monthlyRefundrate.data.refund_rate,Tiktokcompaign:compain.data.gmv});}catch(error){console.error(\"Error fetching data:\",error);}};fetchData();},[getStartOfMonth,getStartOfWeek]);const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:2}).format(amount);};//  const calculatePercentage = (value, total) => {\n//    if (total === 0) return '0.0%';\n//    return ((value / total) * 100).toFixed(1) + '%';\n//  };\nconst renderTable=(data,title,period,bgColor)=>/*#__PURE__*/_jsxs(\"div\",{className:\"analytics-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table-header \".concat(bgColor),children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsx(\"span\",{className:\"period\",children:period})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"TOTAL GMV\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:formatCurrency(data.totalGmv)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"FLASH SALES PERFORMANCE\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:formatCurrency(data.flashSalesPerformance)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Refund Rate \"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.refundrate})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Tiktok Compaign outcome \"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.Tiktokcompaign})]})]})]});return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tables-container\",children:[renderTable(yesterdayData,'Yesterday',\"Yesterday (\".concat(formatDate(new Date()),\")\"),'header-blue'),renderTable(currentWeekData,'Current Week',\"Week (\".concat(getStartOfWeek(new Date()),\" - \").concat(formatDate(new Date()),\")\"),'header-green'),renderTable(monthToDateData,'Month to date',\"Month (\".concat(getStartOfMonth(new Date()),\" - \").concat(formatDate(new Date()),\")\"),'header-red')]})});};export default ShopPerformance;","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","jsx","_jsx","jsxs","_jsxs","ShopPerformance","yesterdayData","setYesterdayData","currentWeekData","setCurrentWeekData","monthToDateData","setMonthToDateData","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","getStartOfWeek","startOfWeek","Date","getDay","diff","setDate","getStartOfMonth","startOfMonth","fetchData","currentDate","yesterday","formattedYesterday","formattedEndOfWeek","formattedEndOfMonth","yesterdayPerformanceResponse","get","params","start_time","end_time","page_size","page_no","currentWeekPerformanceResponse","monthToDatePerformanceResponse","yesterdayflashsales","currentWeekflashsales","monthToDateflashsales","compain","dailyRefundrate","weeklyRefundrate","monthlyRefundrate","start_date","end_date","totalGmv","data","gmv","flashSalesPerformance","total_sales","refundrate","refund_rate","Tiktokcompaign","error","console","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","renderTable","title","period","bgColor","className","children"],"sources":["/Users/yousafzahid/Documents/GitHub/TT_app/frontend/src/components/ShopPerformance.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\n// import { ShoppingCart, TrendingUp, Package, AlertCircle, Calendar, DollarSign } from 'lucide-react';\nimport axios from 'axios';\nconst ShopPerformance = () => {\n  const [yesterdayData, setYesterdayData] = useState({});\n  const [currentWeekData, setCurrentWeekData] = useState({});\n  const [monthToDateData, setMonthToDateData] = useState({});\n  //  const [data, setData] = useState(null);\n \n  //  const fetchPerformance = async () => {\n  //    try {\n  //      const response = await axios.get('/api/shop/performance', {\n  //        params: {\n  //          start_time: dates.startDate, // use selected start date\n  //          end_time: dates.endDate,     // use selected end date\n  //          page_size: 10,\n  //          page_no: 1,\n  //        },\n  //      });\n  //      setData(response.data);\n  //    } catch (error) {\n  //      console.error('API call error:', error);\n  //    }\n  //  };\n \n   // Helper function to format dates as 'YYYY-MM-DD'\n   const formatDate = (date) => {\n     const year = date.getFullYear();\n     const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n     const day = String(date.getDate()).padStart(2, '0');\n     return `${year}-${month}-${day}`;\n   };\n \n   // Helper function to get the start of the current week (Monday)\n   const getStartOfWeek = useCallback((date) => {\n    const startOfWeek = new Date(date);\n    const day = startOfWeek.getDay();\n    const diff = startOfWeek.getDate() - day + (day === 0 ? -6 : 1); // Adjust if it's Sunday\n    startOfWeek.setDate(diff);\n    return formatDate(startOfWeek);\n  }, []);\n  \n  const getStartOfMonth = useCallback((date) => {\n    const startOfMonth = new Date(date);\n    startOfMonth.setDate(1); // Set the date to the 1st of the month\n    return formatDate(startOfMonth);\n  }, []);\n  \n   // Helper function to get the start of the current month\n   \n   \n\n   \n   useEffect(() => {\n     const fetchData = async () => {\n       try {\n         const currentDate = new Date();\n \n         // Get yesterday's date\n         const yesterday = new Date(currentDate);\n         yesterday.setDate(currentDate.getDate() - 1);\n         const formattedYesterday = formatDate(yesterday);\n \n         // Get start and end of current week\n         const startOfWeek = getStartOfWeek(currentDate);\n         const formattedEndOfWeek = formatDate(new Date(currentDate)); // current day is the end of the week\n \n         // Get start of the current month\n         const startOfMonth = getStartOfMonth(currentDate);\n         const formattedEndOfMonth = formatDate(currentDate); // current day is the end of the month\n \n         // Fetch performance data (GMV, flash sales, etc.) for yesterday\n         const yesterdayPerformanceResponse = await axios.get('/api/shop/performance', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         // Fetch performance data (GMV, flash sales, etc.) for the current week\n         const currentWeekPerformanceResponse = await axios.get('/api/shop/performance', {\n           params: {\n             start_time: startOfWeek,\n             end_time: formattedEndOfWeek,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         // Fetch performance data (GMV, flash sales, etc.) for the current month\n         const monthToDatePerformanceResponse = await axios.get('/api/shop/performance', {\n           params: {\n             start_time: startOfMonth,\n             end_time: formattedEndOfMonth,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         \n         //fetch flash sales performance \n         const yesterdayflashsales = await axios.get('/api/flash_sales_performance', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         //fetch flash sales performance \n         const currentWeekflashsales = await axios.get('/api/flash_sales_performance', {\n           params: {\n             start_time: startOfWeek,\n             end_time: formattedEndOfWeek,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         //fetch flash sales performance \n         const monthToDateflashsales = await axios.get('/api/flash_sales_performance', {\n           params: {\n             start_time: startOfMonth,\n             end_time: formattedEndOfMonth,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         const compain = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: getStartOfMonth(new Date()),\n            end_time: formattedEndOfMonth,\n            page_size: 10,\n            page_no: 1\n          }\n         });\n         const dailyRefundrate = await axios.get('/api//calculate_refund_rate', {\n           params: {\n             start_time: formattedYesterday,\n             end_time: formattedYesterday,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const weeklyRefundrate = await axios.get('/api//calculate_refund_rate', {\n           params: {\n             start_time: startOfWeek,\n             end_time: formattedEndOfWeek,\n             page_size: 10,\n             page_no: 1\n           }\n         });\n         const monthlyRefundrate = await axios.get('/api//calculate_refund_rate', {\n           params: {\n             start_date: startOfMonth, // Start of current month\n             end_date: formattedEndOfMonth, // End of current month (today)\n             page_size: 10,\n             page_no: 1\n           }\n         });\n \n         // Update the dashboard state with the fetched data\n         setYesterdayData({\n           totalGmv: yesterdayPerformanceResponse.data.gmv,\n           flashSalesPerformance: yesterdayflashsales.data.total_sales,// Example value for flash sales\n           refundrate: dailyRefundrate.data.refund_rate,\n           Tiktokcompaign: compain.data.gmv\n         });\n \n         setCurrentWeekData({\n           totalGmv: currentWeekPerformanceResponse.data.gmv,\n           flashSalesPerformance: currentWeekflashsales.data.total_sales,// Example value for flash sales\n           refundrate: weeklyRefundrate.data.refund_rate,\n           Tiktokcompaign: compain.data.gmv\n         });\n \n         setMonthToDateData({\n           totalGmv: monthToDatePerformanceResponse.data.gmv,\n           flashSalesPerformance: monthToDateflashsales.data.total_sales,// Example value for flash sales\n           refundrate: monthlyRefundrate.data.refund_rate,\n           Tiktokcompaign: compain.data.gmv\n         });\n \n       } catch (error) {\n         console.error(\"Error fetching data:\", error);\n       }\n     };\n \n    fetchData();\n}, [getStartOfMonth, getStartOfWeek]);\n \n   const formatCurrency = (amount) => {\n     return new Intl.NumberFormat('en-US', {\n       style: 'currency',\n       currency: 'USD',\n       minimumFractionDigits: 2\n     }).format(amount);\n   };\n \n  //  const calculatePercentage = (value, total) => {\n  //    if (total === 0) return '0.0%';\n  //    return ((value / total) * 100).toFixed(1) + '%';\n  //  };\n \n   const renderTable = (data, title, period, bgColor) => (\n     <div className=\"analytics-table\">\n       <div className={`table-header ${bgColor}`}>\n         <h3>{title}</h3>\n         <span className=\"period\">{period}</span>\n       </div>\n       <div className=\"table-content\">\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">TOTAL GMV</span>\n           <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n         </div>\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n           <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n         </div>\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">Refund Rate </span>\n           <span className=\"metric-value\">{data.refundrate}</span>\n         </div>\n         <div className=\"metric-row\">\n           <span className=\"metric-label\">Tiktok Compaign outcome </span>\n           <span className=\"metric-value\">{data.Tiktokcompaign}</span>\n           {/* <DatePickerCard onDatesChange={setDates} />\n           <button\n             className=\"mt-4 bg-blue-500 text-white rounded-lg px-4 py-2\"\n             onClick={fetchPerformance}\n             disabled={!dates.startDate || !dates.endDate}\n           >\n             Get Performance\n           </button> */}\n         </div>\n       </div>\n     </div>\n \n \n   );\n \n   return (\n     <div className=\"dashboard-container\">\n       \n \n       <div className=\"tables-container\">\n         {renderTable(\n           yesterdayData,\n           'Yesterday',\n           `Yesterday (${formatDate(new Date())})`,\n           'header-blue'\n         )}\n         {renderTable(\n           currentWeekData,\n           'Current Week',\n           `Week (${getStartOfWeek(new Date())} - ${formatDate(new Date())})`,\n           'header-green'\n         )}\n         {renderTable(\n           monthToDateData,\n           'Month to date',\n           `Month (${getStartOfMonth(new Date())} - ${formatDate(new Date())})`,\n           'header-red'\n         )}\n       </div>\n     </div>\n   );\n };\n\nexport default ShopPerformance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}