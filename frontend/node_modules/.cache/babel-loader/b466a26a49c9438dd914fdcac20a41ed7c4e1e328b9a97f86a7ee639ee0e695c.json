{"ast":null,"code":"var _jsxFileName = \"/Users/zeghamali/Desktop/TT_shop_Dashboard/frontend/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n\n// const Dashboard = () => {\n//   const [dashboardData, setDashboardData] = useState({\n//     yesterday: {\n//       totalGmv: 5200,\n//       tiktokCampaignOutcomes: 4800,\n//       refundRate: 5.2,\n//       flashSalesPerformance: 1200,\n//       gmvPerVideo: 185,\n//       topPerformingCreators: 12,\n//       newContentPerCreator: 3.4,\n//       affiliateJoinRate: 68\n//     },\n//     currentWeek: {\n//       totalGmv: 36400,\n//       tiktokCampaignOutcomes: 32800,\n//       refundRate: 4.8,\n//       flashSalesPerformance: 8200,\n//       gmvPerVideo: 220,\n//       topPerformingCreators: 45,\n//       newContentPerCreator: 4.2,\n//       affiliateJoinRate: 72\n//     },\n//     monthToDate: {\n//       totalGmv: 156000,\n//       tiktokCampaignOutcomes: 142000,\n//       refundRate: 5.1,\n//       flashSalesPerformance: 38000,\n//       gmvPerVideo: 195,\n//       topPerformingCreators: 180,\n//       newContentPerCreator: 3.8,\n//       affiliateJoinRate: 74\n//     }\n//   });\n\n//   useEffect(() => {\n//     // Simulate fetching data\n//     setTimeout(() => {\n//       setDashboardData({\n//         yesterday: {\n//           totalGmv: 5200,\n//           tiktokCampaignOutcomes: 4800,\n//           refundRate: 5.2,\n//           flashSalesPerformance: 1200,\n//           gmvPerVideo: 185,\n//           topPerformingCreators: 12,\n//           newContentPerCreator: 3.4,\n//           affiliateJoinRate: 68\n//         },\n//         currentWeek: {\n//           totalGmv: 36400,\n//           tiktokCampaignOutcomes: 32800,\n//           refundRate: 4.8,\n//           flashSalesPerformance: 8200,\n//           gmvPerVideo: 220,\n//           topPerformingCreators: 45,\n//           newContentPerCreator: 4.2,\n//           affiliateJoinRate: 72\n//         },\n//         monthToDate: {\n//           totalGmv: 156000,\n//           tiktokCampaignOutcomes: 142000,\n//           refundRate: 5.1,\n//           flashSalesPerformance: 38000,\n//           gmvPerVideo: 195,\n//           topPerformingCreators: 180,\n//           newContentPerCreator: 3.8,\n//           affiliateJoinRate: 74\n//         }\n//       });\n//     }, 1000);\n//   }, []);\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD',\n//       minimumFractionDigits: 2\n//     }).format(amount);\n//   };\n\n//   const calculatePercentage = (value, total) => {\n//     if (total === 0) return '0.0%';\n//     return ((value / total) * 100).toFixed(1) + '%';\n//   };\n\n//   const formatPercentage = (value) => {\n//     return value.toFixed(1) + '%';\n//   };\n\n//   const formatNumber = (value) => {\n//     return value.toLocaleString();\n//   };\n\n//   const renderTable = (data, title, period, bgColor) => (\n//     <div className=\"analytics-table\">\n//       <div className={`table-header ${bgColor}`}>\n//         <h3>{title}</h3>\n//         <span className=\"period\">{period}</span>\n//       </div>\n//       <div className=\"table-content\">\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TOTAL GMV</span>\n//           <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TIKTOK SHOP CAMPAIGN OUTCOMES</span>\n//           <span className=\"metric-value\">{formatCurrency(data.tiktokCampaignOutcomes)}</span>\n//           <span className=\"metric-percentage\">{calculatePercentage(data.tiktokCampaignOutcomes, data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">REFUND RATE & TRENDS</span>\n//           <span className=\"metric-value\">{formatPercentage(data.refundRate)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n//           <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n//           <span className=\"metric-percentage\">{calculatePercentage(data.flashSalesPerformance, data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">GMV PER VIDEO/CONTENT</span>\n//           <span className=\"metric-value\">{formatCurrency(data.gmvPerVideo)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TOP-PERFORMING CREATORS</span>\n//           <span className=\"metric-value\">{formatNumber(data.topPerformingCreators)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">NEW CONTENT PER CREATOR</span>\n//           <span className=\"metric-value\">{data.newContentPerCreator.toFixed(1)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">AFFILIATE JOIN RATE & CONVERSION</span>\n//           <span className=\"metric-value\">{formatPercentage(data.affiliateJoinRate)}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <div className=\"dashboard-header\">\n//         <h1>Analytics Dashboard</h1>\n//         <div className=\"time-filter\">\n//           <button className=\"filter-btn active\">Yesterday / Current Week / Month to date</button>\n//           <button className=\"fixed-expenses-btn\">Fixed Expenses</button>\n//         </div>\n//       </div>\n\n//       <div className=\"tables-container\">\n//         {renderTable(\n//           dashboardData.yesterday, \n//           'Yesterday', \n//           '27 May 2025', \n//           'header-blue'\n//         )}\n//         {renderTable(\n//           dashboardData.currentWeek, \n//           'Current Week', \n//           '26 - 28 May 2025', \n//           'header-green'\n//         )}\n//         {renderTable(\n//           dashboardData.monthToDate, \n//           'Month to date', \n//           '1 - 28 May 2025', \n//           'header-red'\n//         )}\n//       </div>\n\n//       <div className=\"product-table-section\">\n//         <table className=\"product-table\">\n//           <thead>\n//             <tr>\n//               <th>Product</th>\n//               <th>Retail Price</th>\n//               <th>Units Sold (Quantity)</th>\n//               <th>Sample (Quantity)</th>\n//               <th>Total Units (Sold & Sample)</th>\n//               <th>GMV</th>\n//               <th>Fulfillment & Shipping (FBT & FBS)</th>\n//               <th>Total COGS (Sold & Samples)</th>\n//               <th>Affiliate Commission</th>\n//               <th>% Tax Refunds</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             <tr>\n//               <td colSpan=\"10\" className=\"no-data\">\n//                 <div className=\"empty-state\">\n//                   <div className=\"empty-icon\">ðŸ“¦</div>\n//                   <p>No orders found on 27 May 2025</p>\n//                 </div>\n//               </td>\n//             </tr>\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// // Add this CSS to your Dashboard.css file or include as a style tag\n// const styles = `\n// .dashboard-container {\n//   padding: 20px;\n//   background-color: #f5f5f5;\n//   min-height: 100vh;\n//   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n// }\n\n// .dashboard-header {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   margin-bottom: 20px;\n// }\n\n// .dashboard-header h1 {\n//   margin: 0;\n//   color: #333;\n//   font-size: 24px;\n//   font-weight: 600;\n// }\n\n// .time-filter {\n//   display: flex;\n//   gap: 10px;\n// }\n\n// .filter-btn, .fixed-expenses-btn {\n//   padding: 8px 16px;\n//   border: 1px solid #ddd;\n//   background: white;\n//   border-radius: 4px;\n//   cursor: pointer;\n//   font-size: 14px;\n// }\n\n// .filter-btn.active {\n//   background: #007bff;\n//   color: white;\n//   border-color: #007bff;\n// }\n\n// .fixed-expenses-btn {\n//   background: #ff6b35;\n//   color: white;\n//   border-color: #ff6b35;\n// }\n\n// .tables-container {\n//   display: grid;\n//   grid-template-columns: 1fr 1fr 1fr;\n//   gap: 20px;\n//   margin-bottom: 30px;\n// }\n\n// .analytics-table {\n//   background: white;\n//   border-radius: 8px;\n//   overflow: hidden;\n//   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n// }\n\n// .table-header {\n//   padding: 16px 20px;\n//   color: white;\n//   font-weight: 600;\n// }\n\n// .header-blue {\n//   background: linear-gradient(135deg, #4a90e2, #357abd);\n// }\n\n// .header-green {\n//   background: linear-gradient(135deg, #2ecc71, #27ae60);\n// }\n\n// .header-red {\n//   background: linear-gradient(135deg, #e74c3c, #c0392b);\n// }\n\n// .table-header h3 {\n//   margin: 0 0 4px 0;\n//   font-size: 18px;\n// }\n\n// .period {\n//   font-size: 12px;\n//   opacity: 0.9;\n// }\n\n// .table-content {\n//   padding: 20px;\n// }\n\n// .metric-row {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   padding: 8px 0;\n//   border-bottom: 1px solid #f0f0f0;\n//   position: relative;\n// }\n\n// .metric-row:last-child {\n//   border-bottom: none;\n// }\n\n// .metric-label {\n//   font-size: 12px;\n//   color: #666;\n//   font-weight: 500;\n//   flex: 1;\n// }\n\n// .metric-value {\n//   font-size: 14px;\n//   font-weight: 600;\n//   color: #333;\n//   margin-right: 10px;\n// }\n\n// .metric-percentage {\n//   font-size: 12px;\n//   color: #888;\n//   min-width: 50px;\n//   text-align: right;\n// }\n\n// .product-table-section {\n//   background: white;\n//   border-radius: 8px;\n//   overflow: hidden;\n//   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n// }\n\n// .product-table {\n//   width: 100%;\n//   border-collapse: collapse;\n// }\n\n// .product-table th {\n//   background: #f8f9fa;\n//   padding: 12px 8px;\n//   text-align: left;\n//   font-size: 11px;\n//   font-weight: 600;\n//   color: #555;\n//   border-bottom: 1px solid #dee2e6;\n// }\n\n// .product-table td {\n//   padding: 12px 8px;\n//   border-bottom: 1px solid #f0f0f0;\n//   font-size: 12px;\n// }\n\n// .no-data {\n//   text-align: center;\n//   padding: 40px !important;\n// }\n\n// .empty-state {\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   color: #999;\n// }\n\n// .empty-icon {\n//   font-size: 48px;\n//   margin-bottom: 10px;\n//   opacity: 0.5;\n// }\n\n// .empty-state p {\n//   margin: 0;\n//   font-size: 14px;\n// }\n\n// @media (max-width: 768px) {\n//   .tables-container {\n//     grid-template-columns: 1fr;\n//     gap: 15px;\n//   }\n// }\n\n// @media (max-width: 768px) {\n//   .dashboard-header {\n//     flex-direction: column;\n//     gap: 15px;\n//     align-items: stretch;\n//   }\n\n//   .product-table {\n//     font-size: 10px;\n//   }\n\n//   .product-table th,\n//   .product-table td {\n//     padding: 8px 4px;\n//   }\n// }\n// `;\n\n// // Inject styles\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = styles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// // =========================================================================\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dashboardData, setDashboardData] = useState({\n    yesterday: {},\n    currentWeek: {},\n    monthToDate: {}\n  });\n\n  // Fetch data from backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch performance data (GMV, flash sales, etc.)\n        const performanceResponse = await axios.get('http://127.0.0.1:8000/shop/performance', {\n          params: {\n            start_time: '1640995200',\n            // Example Unix timestamp for start time\n            end_time: '1643587200',\n            // Example Unix timestamp for end time\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch top-performing creators data\n        const creatorsResponse = await axios.get('http://127.0.0.1:8000/top_performing_creators', {\n          params: {\n            start_date: '2025-01-01',\n            end_date: '2025-01-31',\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Update the dashboard state with the fetched data\n        setDashboardData({\n          yesterday: {\n            totalGmv: performanceResponse.data.gmv,\n            flashSalesPerformance: 1000,\n            // Fetch or calculate this based on your backend\n            topPerformingCreators: creatorsResponse.data.top_creators.length\n            // Add more data as necessary\n          },\n          currentWeek: {\n            totalGmv: performanceResponse.data.gmv * 7,\n            // Example: multiplying by 7 to simulate weekly data\n            flashSalesPerformance: 7000,\n            // Example value\n            topPerformingCreators: creatorsResponse.data.top_creators.length\n            // Add more data as necessary\n          },\n          monthToDate: {\n            totalGmv: performanceResponse.data.gmv * 30,\n            // Example: multiplying by 30 to simulate monthly data\n            flashSalesPerformance: 30000,\n            // Example value\n            topPerformingCreators: creatorsResponse.data.top_creators.length\n            // Add more data as necessary\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to ensure this runs once when the component mounts\n\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n  const calculatePercentage = (value, total) => {\n    if (total === 0) return '0.0%';\n    return (value / total * 100).toFixed(1) + '%';\n  };\n  const renderTable = (data, title, period, bgColor) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `table-header ${bgColor}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"period\",\n        children: period\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"TOTAL GMV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: formatCurrency(data.totalGmv)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"FLASH SALES PERFORMANCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: formatCurrency(data.flashSalesPerformance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"TOP-PERFORMING CREATORS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: data.topPerformingCreators\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-btn active\",\n          children: \"Yesterday / Current Week / Month to date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fixed-expenses-btn\",\n          children: \"Fixed Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables-container\",\n      children: [renderTable(dashboardData.yesterday, 'Yesterday', '27 May 2025', 'header-blue'), renderTable(dashboardData.currentWeek, 'Current Week', '26 - 28 May 2025', 'header-green'), renderTable(dashboardData.monthToDate, 'Month to date', '1 - 28 May 2025', 'header-red')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 531,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"eqPZ5U5G9+x/2ire13N+ASA5dcs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","dashboardData","setDashboardData","yesterday","currentWeek","monthToDate","fetchData","performanceResponse","get","params","start_time","end_time","page_size","page_no","creatorsResponse","start_date","end_date","totalGmv","data","gmv","flashSalesPerformance","topPerformingCreators","top_creators","length","error","console","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","calculatePercentage","value","total","toFixed","renderTable","title","period","bgColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeghamali/Desktop/TT_shop_Dashboard/frontend/src/components/Dashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n\n// const Dashboard = () => {\n//   const [dashboardData, setDashboardData] = useState({\n//     yesterday: {\n//       totalGmv: 5200,\n//       tiktokCampaignOutcomes: 4800,\n//       refundRate: 5.2,\n//       flashSalesPerformance: 1200,\n//       gmvPerVideo: 185,\n//       topPerformingCreators: 12,\n//       newContentPerCreator: 3.4,\n//       affiliateJoinRate: 68\n//     },\n//     currentWeek: {\n//       totalGmv: 36400,\n//       tiktokCampaignOutcomes: 32800,\n//       refundRate: 4.8,\n//       flashSalesPerformance: 8200,\n//       gmvPerVideo: 220,\n//       topPerformingCreators: 45,\n//       newContentPerCreator: 4.2,\n//       affiliateJoinRate: 72\n//     },\n//     monthToDate: {\n//       totalGmv: 156000,\n//       tiktokCampaignOutcomes: 142000,\n//       refundRate: 5.1,\n//       flashSalesPerformance: 38000,\n//       gmvPerVideo: 195,\n//       topPerformingCreators: 180,\n//       newContentPerCreator: 3.8,\n//       affiliateJoinRate: 74\n//     }\n//   });\n\n\n\n\n//   useEffect(() => {\n//     // Simulate fetching data\n//     setTimeout(() => {\n//       setDashboardData({\n//         yesterday: {\n//           totalGmv: 5200,\n//           tiktokCampaignOutcomes: 4800,\n//           refundRate: 5.2,\n//           flashSalesPerformance: 1200,\n//           gmvPerVideo: 185,\n//           topPerformingCreators: 12,\n//           newContentPerCreator: 3.4,\n//           affiliateJoinRate: 68\n//         },\n//         currentWeek: {\n//           totalGmv: 36400,\n//           tiktokCampaignOutcomes: 32800,\n//           refundRate: 4.8,\n//           flashSalesPerformance: 8200,\n//           gmvPerVideo: 220,\n//           topPerformingCreators: 45,\n//           newContentPerCreator: 4.2,\n//           affiliateJoinRate: 72\n//         },\n//         monthToDate: {\n//           totalGmv: 156000,\n//           tiktokCampaignOutcomes: 142000,\n//           refundRate: 5.1,\n//           flashSalesPerformance: 38000,\n//           gmvPerVideo: 195,\n//           topPerformingCreators: 180,\n//           newContentPerCreator: 3.8,\n//           affiliateJoinRate: 74\n//         }\n//       });\n//     }, 1000);\n//   }, []);\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD',\n//       minimumFractionDigits: 2\n//     }).format(amount);\n//   };\n\n//   const calculatePercentage = (value, total) => {\n//     if (total === 0) return '0.0%';\n//     return ((value / total) * 100).toFixed(1) + '%';\n//   };\n\n//   const formatPercentage = (value) => {\n//     return value.toFixed(1) + '%';\n//   };\n\n//   const formatNumber = (value) => {\n//     return value.toLocaleString();\n//   };\n\n//   const renderTable = (data, title, period, bgColor) => (\n//     <div className=\"analytics-table\">\n//       <div className={`table-header ${bgColor}`}>\n//         <h3>{title}</h3>\n//         <span className=\"period\">{period}</span>\n//       </div>\n//       <div className=\"table-content\">\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TOTAL GMV</span>\n//           <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TIKTOK SHOP CAMPAIGN OUTCOMES</span>\n//           <span className=\"metric-value\">{formatCurrency(data.tiktokCampaignOutcomes)}</span>\n//           <span className=\"metric-percentage\">{calculatePercentage(data.tiktokCampaignOutcomes, data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">REFUND RATE & TRENDS</span>\n//           <span className=\"metric-value\">{formatPercentage(data.refundRate)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n//           <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n//           <span className=\"metric-percentage\">{calculatePercentage(data.flashSalesPerformance, data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">GMV PER VIDEO/CONTENT</span>\n//           <span className=\"metric-value\">{formatCurrency(data.gmvPerVideo)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TOP-PERFORMING CREATORS</span>\n//           <span className=\"metric-value\">{formatNumber(data.topPerformingCreators)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">NEW CONTENT PER CREATOR</span>\n//           <span className=\"metric-value\">{data.newContentPerCreator.toFixed(1)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">AFFILIATE JOIN RATE & CONVERSION</span>\n//           <span className=\"metric-value\">{formatPercentage(data.affiliateJoinRate)}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <div className=\"dashboard-header\">\n//         <h1>Analytics Dashboard</h1>\n//         <div className=\"time-filter\">\n//           <button className=\"filter-btn active\">Yesterday / Current Week / Month to date</button>\n//           <button className=\"fixed-expenses-btn\">Fixed Expenses</button>\n//         </div>\n//       </div>\n      \n//       <div className=\"tables-container\">\n//         {renderTable(\n//           dashboardData.yesterday, \n//           'Yesterday', \n//           '27 May 2025', \n//           'header-blue'\n//         )}\n//         {renderTable(\n//           dashboardData.currentWeek, \n//           'Current Week', \n//           '26 - 28 May 2025', \n//           'header-green'\n//         )}\n//         {renderTable(\n//           dashboardData.monthToDate, \n//           'Month to date', \n//           '1 - 28 May 2025', \n//           'header-red'\n//         )}\n//       </div>\n\n//       <div className=\"product-table-section\">\n//         <table className=\"product-table\">\n//           <thead>\n//             <tr>\n//               <th>Product</th>\n//               <th>Retail Price</th>\n//               <th>Units Sold (Quantity)</th>\n//               <th>Sample (Quantity)</th>\n//               <th>Total Units (Sold & Sample)</th>\n//               <th>GMV</th>\n//               <th>Fulfillment & Shipping (FBT & FBS)</th>\n//               <th>Total COGS (Sold & Samples)</th>\n//               <th>Affiliate Commission</th>\n//               <th>% Tax Refunds</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             <tr>\n//               <td colSpan=\"10\" className=\"no-data\">\n//                 <div className=\"empty-state\">\n//                   <div className=\"empty-icon\">ðŸ“¦</div>\n//                   <p>No orders found on 27 May 2025</p>\n//                 </div>\n//               </td>\n//             </tr>\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// // Add this CSS to your Dashboard.css file or include as a style tag\n// const styles = `\n// .dashboard-container {\n//   padding: 20px;\n//   background-color: #f5f5f5;\n//   min-height: 100vh;\n//   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n// }\n\n// .dashboard-header {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   margin-bottom: 20px;\n// }\n\n// .dashboard-header h1 {\n//   margin: 0;\n//   color: #333;\n//   font-size: 24px;\n//   font-weight: 600;\n// }\n\n// .time-filter {\n//   display: flex;\n//   gap: 10px;\n// }\n\n// .filter-btn, .fixed-expenses-btn {\n//   padding: 8px 16px;\n//   border: 1px solid #ddd;\n//   background: white;\n//   border-radius: 4px;\n//   cursor: pointer;\n//   font-size: 14px;\n// }\n\n// .filter-btn.active {\n//   background: #007bff;\n//   color: white;\n//   border-color: #007bff;\n// }\n\n// .fixed-expenses-btn {\n//   background: #ff6b35;\n//   color: white;\n//   border-color: #ff6b35;\n// }\n\n// .tables-container {\n//   display: grid;\n//   grid-template-columns: 1fr 1fr 1fr;\n//   gap: 20px;\n//   margin-bottom: 30px;\n// }\n\n// .analytics-table {\n//   background: white;\n//   border-radius: 8px;\n//   overflow: hidden;\n//   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n// }\n\n// .table-header {\n//   padding: 16px 20px;\n//   color: white;\n//   font-weight: 600;\n// }\n\n// .header-blue {\n//   background: linear-gradient(135deg, #4a90e2, #357abd);\n// }\n\n// .header-green {\n//   background: linear-gradient(135deg, #2ecc71, #27ae60);\n// }\n\n// .header-red {\n//   background: linear-gradient(135deg, #e74c3c, #c0392b);\n// }\n\n// .table-header h3 {\n//   margin: 0 0 4px 0;\n//   font-size: 18px;\n// }\n\n// .period {\n//   font-size: 12px;\n//   opacity: 0.9;\n// }\n\n// .table-content {\n//   padding: 20px;\n// }\n\n// .metric-row {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   padding: 8px 0;\n//   border-bottom: 1px solid #f0f0f0;\n//   position: relative;\n// }\n\n// .metric-row:last-child {\n//   border-bottom: none;\n// }\n\n// .metric-label {\n//   font-size: 12px;\n//   color: #666;\n//   font-weight: 500;\n//   flex: 1;\n// }\n\n// .metric-value {\n//   font-size: 14px;\n//   font-weight: 600;\n//   color: #333;\n//   margin-right: 10px;\n// }\n\n// .metric-percentage {\n//   font-size: 12px;\n//   color: #888;\n//   min-width: 50px;\n//   text-align: right;\n// }\n\n// .product-table-section {\n//   background: white;\n//   border-radius: 8px;\n//   overflow: hidden;\n//   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n// }\n\n// .product-table {\n//   width: 100%;\n//   border-collapse: collapse;\n// }\n\n// .product-table th {\n//   background: #f8f9fa;\n//   padding: 12px 8px;\n//   text-align: left;\n//   font-size: 11px;\n//   font-weight: 600;\n//   color: #555;\n//   border-bottom: 1px solid #dee2e6;\n// }\n\n// .product-table td {\n//   padding: 12px 8px;\n//   border-bottom: 1px solid #f0f0f0;\n//   font-size: 12px;\n// }\n\n// .no-data {\n//   text-align: center;\n//   padding: 40px !important;\n// }\n\n// .empty-state {\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   color: #999;\n// }\n\n// .empty-icon {\n//   font-size: 48px;\n//   margin-bottom: 10px;\n//   opacity: 0.5;\n// }\n\n// .empty-state p {\n//   margin: 0;\n//   font-size: 14px;\n// }\n\n// @media (max-width: 768px) {\n//   .tables-container {\n//     grid-template-columns: 1fr;\n//     gap: 15px;\n//   }\n// }\n\n// @media (max-width: 768px) {\n//   .dashboard-header {\n//     flex-direction: column;\n//     gap: 15px;\n//     align-items: stretch;\n//   }\n  \n//   .product-table {\n//     font-size: 10px;\n//   }\n  \n//   .product-table th,\n//   .product-table td {\n//     padding: 8px 4px;\n//   }\n// }\n// `;\n\n// // Inject styles\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = styles;\n//   document.head.appendChild(styleSheet);\n// }\n\n\n\n\n\n\n// // =========================================================================\n\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n  const [dashboardData, setDashboardData] = useState({\n    yesterday: {},\n    currentWeek: {},\n    monthToDate: {}\n  });\n\n  // Fetch data from backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch performance data (GMV, flash sales, etc.)\n        const performanceResponse = await axios.get('http://127.0.0.1:8000/shop/performance', {\n          params: {\n            start_time: '1640995200', // Example Unix timestamp for start time\n            end_time: '1643587200', // Example Unix timestamp for end time\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch top-performing creators data\n        const creatorsResponse = await axios.get('http://127.0.0.1:8000/top_performing_creators', {\n          params: {\n            start_date: '2025-01-01',\n            end_date: '2025-01-31',\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Update the dashboard state with the fetched data\n        setDashboardData({\n          yesterday: {\n            totalGmv: performanceResponse.data.gmv,\n            flashSalesPerformance: 1000, // Fetch or calculate this based on your backend\n            topPerformingCreators: creatorsResponse.data.top_creators.length,\n            // Add more data as necessary\n          },\n          currentWeek: {\n            totalGmv: performanceResponse.data.gmv * 7, // Example: multiplying by 7 to simulate weekly data\n            flashSalesPerformance: 7000, // Example value\n            topPerformingCreators: creatorsResponse.data.top_creators.length,\n            // Add more data as necessary\n          },\n          monthToDate: {\n            totalGmv: performanceResponse.data.gmv * 30, // Example: multiplying by 30 to simulate monthly data\n            flashSalesPerformance: 30000, // Example value\n            topPerformingCreators: creatorsResponse.data.top_creators.length,\n            // Add more data as necessary\n          }\n        });\n\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to ensure this runs once when the component mounts\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const calculatePercentage = (value, total) => {\n    if (total === 0) return '0.0%';\n    return ((value / total) * 100).toFixed(1) + '%';\n  };\n\n  const renderTable = (data, title, period, bgColor) => (\n    <div className=\"analytics-table\">\n      <div className={`table-header ${bgColor}`}>\n        <h3>{title}</h3>\n        <span className=\"period\">{period}</span>\n      </div>\n      <div className=\"table-content\">\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">TOTAL GMV</span>\n          <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n          <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">TOP-PERFORMING CREATORS</span>\n          <span className=\"metric-value\">{data.topPerformingCreators}</span>\n        </div>\n        {/* Add more rows as necessary */}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <h1>Analytics Dashboard</h1>\n        <div className=\"time-filter\">\n          <button className=\"filter-btn active\">Yesterday / Current Week / Month to date</button>\n          <button className=\"fixed-expenses-btn\">Fixed Expenses</button>\n        </div>\n      </div>\n\n      <div className=\"tables-container\">\n        {renderTable(\n          dashboardData.yesterday, \n          'Yesterday', \n          '27 May 2025', \n          'header-blue'\n        )}\n        {renderTable(\n          dashboardData.currentWeek, \n          'Current Week', \n          '26 - 28 May 2025', \n          'header-green'\n        )}\n        {renderTable(\n          dashboardData.monthToDate, \n          'Month to date', \n          '1 - 28 May 2025', \n          'header-red'\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAOA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC;IACjDQ,SAAS,EAAE,CAAC,CAAC;IACbC,WAAW,EAAE,CAAC,CAAC;IACfC,WAAW,EAAE,CAAC;EAChB,CAAC,CAAC;;EAEF;EACAX,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,mBAAmB,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,wCAAwC,EAAE;UACpFC,MAAM,EAAE;YACNC,UAAU,EAAE,YAAY;YAAE;YAC1BC,QAAQ,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}