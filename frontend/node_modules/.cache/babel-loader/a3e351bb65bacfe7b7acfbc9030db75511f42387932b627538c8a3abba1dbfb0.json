{"ast":null,"code":"// export default Dashboard;\nimport React,{useEffect,useState,useCallback}from'react';import axios from'axios';import\"./Dashboard.css\";import DatePickerCard from'./Datepicker';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Dashboard=()=>{const[yesterdayData,setYesterdayData]=useState({});const[currentWeekData,setCurrentWeekData]=useState({});const[monthToDateData,setMonthToDateData]=useState({});const[dates,setDates]=useState({startDate:'',endDate:''});// const [data, setData] = useState(null);\nconst[customRangeData,setCustomRangeData]=useState([]);const[loading,setLoading]=useState(false);// const [selectedPeriods, setSelectedPeriods] = useState([]);\n// Function to generate month periods between start and end date\nconst generateMonthPeriods=(startDate,endDate)=>{const periods=[];const start=new Date(startDate);const end=new Date(endDate);let current=new Date(start.getFullYear(),start.getMonth(),1);while(current<=end){const monthStart=new Date(current);const monthEnd=new Date(current.getFullYear(),current.getMonth()+1,0);// Adjust for the actual range\nconst periodStart=monthStart<start?start:monthStart;const periodEnd=monthEnd>end?end:monthEnd;periods.push({label:current.toLocaleString('default',{month:'short',year:'numeric'}),startDate:formatDate(periodStart),endDate:formatDate(periodEnd),fullMonth:monthStart>=start&&monthEnd<=end});current.setMonth(current.getMonth()+1);}return periods;};const fetchCustomRangeData=async()=>{if(!dates.startDate||!dates.endDate){alert('Please select both start and end dates');return;}setLoading(true);try{const periods=generateMonthPeriods(dates.startDate,dates.endDate);const periodData=await Promise.all(periods.map(async period=>{try{var _creatorsResponse$dat;// Fetch all required data for this period\nconst[performanceResponse,flashSalesResponse,creatorsResponse,gmvPerVideoResponse,refundRateResponse]=await Promise.all([axios.get('/api/shop/performance',{params:{start_time:period.startDate,end_time:period.endDate,page_size:10,page_no:1}}),axios.get('/api/flash_sales_performance',{params:{start_time:period.startDate,end_time:period.endDate,page_size:10,page_no:1}}),axios.get('/api/top_performing_creators',{params:{start_time:period.startDate,end_time:period.endDate,page_size:10,page_no:1}}),axios.get('/api/Gmv_per_video',{params:{start_time:period.startDate,end_time:period.endDate,page_size:10,page_no:1}}),axios.get('/api/calculate_refund_rate',{params:{start_time:period.startDate,end_time:period.endDate,page_size:10,page_no:1}})]);return{period:period.label,startDate:period.startDate,endDate:period.endDate,totalGmv:performanceResponse.data.gmv||0,flashSalesPerformance:flashSalesResponse.data.total_sales||0,topPerformingCreators:((_creatorsResponse$dat=creatorsResponse.data.top_creators)===null||_creatorsResponse$dat===void 0?void 0:_creatorsResponse$dat.length)||0,gmvPerVideo:gmvPerVideoResponse.data.gmv||0,refundRate:refundRateResponse.data.refund_rate||0,tiktokCampaign:performanceResponse.data.gmv||0// Using GMV as campaign outcome\n};}catch(error){console.error(\"Error fetching data for period \".concat(period.label,\":\"),error);return{period:period.label,startDate:period.startDate,endDate:period.endDate,totalGmv:0,flashSalesPerformance:0,topPerformingCreators:0,gmvPerVideo:0,refundRate:0,tiktokCampaign:0,error:true};}}));setCustomRangeData(periodData);}catch(error){console.error('Error fetching custom range data:',error);alert('Error fetching data. Please try again.');}finally{setLoading(false);}};// const fetchPerformance = async () => {\n//   try {\n//     const response = await axios.get('/api/shop/performance', {\n//       params: {\n//         start_time: dates.startDate,\n//         end_time: dates.endDate,\n//         page_size: 10,\n//         page_no: 1,\n//       },\n//     });\n//     setData(response.data);\n//   } catch (error) {\n//     console.error('API call error:', error);\n//   }\n// };\n// Helper function to format dates as 'YYYY-MM-DD'\nconst formatDate=date=>{const year=date.getFullYear();const month=String(date.getMonth()+1).padStart(2,'0');const day=String(date.getDate()).padStart(2,'0');return\"\".concat(year,\"-\").concat(month,\"-\").concat(day);};// Helper function to get the start of the current week (Monday)\nconst getStartOfWeek=useCallback(date=>{const startOfWeek=new Date(date);const day=startOfWeek.getDay();const diff=startOfWeek.getDate()-day+(day===0?-6:1);startOfWeek.setDate(diff);return formatDate(startOfWeek);},[]);const getStartOfMonth=useCallback(date=>{const startOfMonth=new Date(date);startOfMonth.setDate(1);return formatDate(startOfMonth);},[]);// Calculate percentage change\n// const calculatePercentageChange = (current, previous) => {\n//   if (previous === 0) {\n//     return current > 0 ? '+100.0%' : '0.0%';\n//   }\n//   const change = ((current - previous) / previous) * 100;\n//   const sign = change >= 0 ? '+' : '';\n//   return `${sign}${change.toFixed(1)}%`;\n// };\n// Calculate totals for the custom range table\nconst calculateTotals=()=>{if(customRangeData.length===0)return{};return{totalGmv:customRangeData.reduce((sum,period)=>sum+period.totalGmv,0),flashSalesPerformance:customRangeData.reduce((sum,period)=>sum+period.flashSalesPerformance,0),topPerformingCreators:Math.max(...customRangeData.map(period=>period.topPerformingCreators),0),gmvPerVideo:customRangeData.reduce((sum,period)=>sum+period.gmvPerVideo,0)/customRangeData.length,refundRate:customRangeData.reduce((sum,period)=>sum+period.refundRate,0)/customRangeData.length,tiktokCampaign:customRangeData.reduce((sum,period)=>sum+period.tiktokCampaign,0)};};useEffect(()=>{const fetchData=async()=>{try{const currentDate=new Date();// Get yesterday's date\nconst yesterday=new Date(currentDate);yesterday.setDate(currentDate.getDate()-1);const formattedYesterday=formatDate(yesterday);// Get start and end of current week\nconst startOfWeek=getStartOfWeek(currentDate);const formattedEndOfWeek=formatDate(new Date(currentDate));// Get start of the current month\nconst startOfMonth=getStartOfMonth(currentDate);const formattedEndOfMonth=formatDate(currentDate);// Fetch performance data for yesterday\nconst yesterdayPerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:formattedYesterday,end_time:formattedYesterday,page_size:10,page_no:1}});// Fetch performance data for the current week\nconst currentWeekPerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,page_size:10,page_no:1}});// Fetch performance data for the current month\nconst monthToDatePerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:startOfMonth,end_time:formattedEndOfMonth,page_size:10,page_no:1}});// Fetch flash sales performance \nconst yesterdayflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:formattedYesterday,end_time:formattedYesterday,page_size:10,page_no:1}});const currentWeekflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,page_size:10,page_no:1}});const monthToDateflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:startOfMonth,end_time:formattedEndOfMonth,page_size:10,page_no:1}});// Fetch top-performing creators for each period\nconst dailycreatorsResponse=await axios.get('/api/top_performing_creators',{params:{start_time:formattedYesterday,end_time:formattedYesterday,page_size:10,page_no:1}});const weaklycreatorsResponse=await axios.get('/api/top_performing_creators',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,page_size:10,page_no:1}});const monthlycreatorsResponse=await axios.get('/api/top_performing_creators',{params:{start_date:startOfMonth,end_date:formattedEndOfMonth,page_size:10,page_no:1}});const dailygmvPervideo=await axios.get('/api/Gmv_per_video',{params:{start_time:formattedYesterday,end_time:formattedYesterday,page_size:10,page_no:1}});const weeklygmvPervideo=await axios.get('/api/Gmv_per_video',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,page_size:10,page_no:1}});const monthlygmvPervideo=await axios.get('/api/Gmv_per_video',{params:{start_date:startOfMonth,end_date:formattedEndOfMonth,page_size:10,page_no:1}});const dailyRefundrate=await axios.get('/api/calculate_refund_rate',{params:{start_time:formattedYesterday,end_time:formattedYesterday,page_size:10,page_no:1}});const weeklyRefundrate=await axios.get('/api/calculate_refund_rate',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,page_size:10,page_no:1}});const monthlyRefundrate=await axios.get('/api/calculate_refund_rate',{params:{start_date:startOfMonth,end_date:formattedEndOfMonth,page_size:10,page_no:1}});// Update the dashboard state with the fetched data\nsetYesterdayData({totalGmv:yesterdayPerformanceResponse.data.gmv,flashSalesPerformance:yesterdayflashsales.data.total_sales,topPerformingCreators:dailycreatorsResponse.data.top_creators.length,gmvpervideo:dailygmvPervideo.data.gmv,refundrate:dailyRefundrate.data.refund_rate,Tiktokcompaign:yesterdayPerformanceResponse.data.gmv});setCurrentWeekData({totalGmv:currentWeekPerformanceResponse.data.gmv,flashSalesPerformance:currentWeekflashsales.data.total_sales,topPerformingCreators:weaklycreatorsResponse.data.top_creators.length,gmvpervideo:weeklygmvPervideo.data.gmv,refundrate:weeklyRefundrate.data.refund_rate,Tiktokcompaign:currentWeekPerformanceResponse.data.gmv});setMonthToDateData({totalGmv:monthToDatePerformanceResponse.data.gmv,flashSalesPerformance:monthToDateflashsales.data.total_sales,topPerformingCreators:monthlycreatorsResponse.data.top_creators.length,gmvpervideo:monthlygmvPervideo.data.gmv,refundrate:monthlyRefundrate.data.refund_rate,Tiktokcompaign:monthToDatePerformanceResponse.data.gmv});}catch(error){console.error(\"Error fetching data:\",error);}};fetchData();},[getStartOfMonth,getStartOfWeek]);const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:2}).format(amount);};const formatPercentage=value=>{return\"\".concat(value.toFixed(1),\"%\");};const renderTable=(data,title,period,bgColor)=>/*#__PURE__*/_jsxs(\"div\",{className:\"analytics-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table-header \".concat(bgColor),children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsx(\"span\",{className:\"period\",children:period})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"TOTAL GMV\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:formatCurrency(data.totalGmv)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"FLASH SALES PERFORMANCE\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:formatCurrency(data.flashSalesPerformance)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"TOP-PERFORMING CREATORS\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.topPerformingCreators})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"GMV PER VIDEO\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.gmvpervideo})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Refund Rate\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.refundrate})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Tiktok Campaign outcome\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.Tiktokcompaign})]})]})]});// New custom range table component\nconst renderCustomRangeTable=()=>{if(customRangeData.length===0)return null;const totals=calculateTotals();return/*#__PURE__*/_jsxs(\"div\",{className:\"custom-range-table-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"custom-range-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Performance Analysis\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"date-range-info\",children:[\"From \",dates.startDate,\" to \",dates.endDate]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"performance-table\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"parameter-column\",children:\"Parameter/Date\"}),customRangeData.map((period,index)=>/*#__PURE__*/_jsx(\"th\",{className:\"period-column\",children:period.period},index)),/*#__PURE__*/_jsx(\"th\",{className:\"total-column\",children:\"Total\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"td\",{colSpan:customRangeData.length+2,children:\"Sales Performance\"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"metric-label\",children:\"GMV (raw)\"}),customRangeData.map((period,index)=>/*#__PURE__*/_jsxs(\"td\",{className:\"metric-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-value\",children:formatCurrency(period.totalGmv)}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-change \".concat(period.totalGmv>0?'positive':'neutral'),children:[period.totalGmv>0?'+':'',(period.totalGmv/(totals.totalGmv||1)*100).toFixed(1),\"%\"]})]},index)),/*#__PURE__*/_jsx(\"td\",{className:\"total-cell\",children:formatCurrency(totals.totalGmv)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"metric-label\",children:\"Flash Sales Performance\"}),customRangeData.map((period,index)=>/*#__PURE__*/_jsxs(\"td\",{className:\"metric-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-value\",children:formatCurrency(period.flashSalesPerformance)}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-change \".concat(period.flashSalesPerformance>0?'positive':'neutral'),children:[period.flashSalesPerformance>0?'+':'',(period.flashSalesPerformance/(totals.flashSalesPerformance||1)*100).toFixed(1),\"%\"]})]},index)),/*#__PURE__*/_jsx(\"td\",{className:\"total-cell\",children:formatCurrency(totals.flashSalesPerformance)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"metric-label\",children:\"Top Performing Creators\"}),customRangeData.map((period,index)=>/*#__PURE__*/_jsxs(\"td\",{className:\"metric-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-value\",children:period.topPerformingCreators}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-change neutral\",children:[period.topPerformingCreators>0?'+':'',period.topPerformingCreators]})]},index)),/*#__PURE__*/_jsx(\"td\",{className:\"total-cell\",children:totals.topPerformingCreators})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"metric-label\",children:\"GMV Per Video\"}),customRangeData.map((period,index)=>/*#__PURE__*/_jsxs(\"td\",{className:\"metric-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-value\",children:formatCurrency(period.gmvPerVideo)}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-change \".concat(period.gmvPerVideo>0?'positive':'neutral'),children:[period.gmvPerVideo>0?'+':'',formatPercentage(period.gmvPerVideo/(totals.gmvPerVideo||1)*100)]})]},index)),/*#__PURE__*/_jsx(\"td\",{className:\"total-cell\",children:formatCurrency(totals.gmvPerVideo)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"metric-label\",children:\"Refund Rate\"}),customRangeData.map((period,index)=>/*#__PURE__*/_jsxs(\"td\",{className:\"metric-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-value\",children:formatPercentage(period.refundRate)}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-change \".concat(period.refundRate<totals.refundRate?'positive':'negative'),children:[period.refundRate<totals.refundRate?'↓':'↑',Math.abs(period.refundRate-totals.refundRate).toFixed(1),\"%\"]})]},index)),/*#__PURE__*/_jsx(\"td\",{className:\"total-cell\",children:formatPercentage(totals.refundRate)})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"metric-label\",children:\"TikTok Campaign Outcome\"}),customRangeData.map((period,index)=>/*#__PURE__*/_jsxs(\"td\",{className:\"metric-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-value\",children:formatCurrency(period.tiktokCampaign)}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-change \".concat(period.tiktokCampaign>0?'positive':'neutral'),children:[period.tiktokCampaign>0?'+':'',(period.tiktokCampaign/(totals.tiktokCampaign||1)*100).toFixed(1),\"%\"]})]},index)),/*#__PURE__*/_jsx(\"td\",{className:\"total-cell\",children:formatCurrency(totals.tiktokCampaign)})]})]})]})})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tables-container\",children:[renderTable(yesterdayData,'Yesterday',\"Yesterday (\".concat(formatDate(new Date()),\")\"),'header-blue'),renderTable(currentWeekData,'Current Week',\"Week (\".concat(getStartOfWeek(new Date()),\" - \").concat(formatDate(new Date()),\")\"),'header-green'),renderTable(monthToDateData,'Month to date',\"Month (\".concat(getStartOfMonth(new Date()),\" - \").concat(formatDate(new Date()),\")\"),'header-red')]}),/*#__PURE__*/_jsx(\"div\",{className:\"date-range-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"date-range-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"\\uD83D\\uDCCA Performance Analysis\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-subtitle\",children:\"Select a date range to analyze your business metrics\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(DatePickerCard,{onDatesChange:setDates}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-section\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"analyze-button \".concat(!dates.startDate||!dates.endDate||loading?'disabled':''),onClick:fetchCustomRangeData,disabled:!dates.startDate||!dates.endDate||loading,children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner\"}),\"Analyzing...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"button-icon\",children:\"\\uD83D\\uDD0D\"}),\"Analyze Performance\"]})}),dates.startDate&&dates.endDate&&/*#__PURE__*/_jsxs(\"div\",{className:\"selected-range-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"range-label\",children:\"Selected Range:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"range-text\",children:[new Date(dates.startDate).toLocaleDateString('en-US',{month:'short',day:'numeric',year:'numeric'}),\" - \",new Date(dates.endDate).toLocaleDateString('en-US',{month:'short',day:'numeric',year:'numeric'})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"range-duration\",children:[\"(\",Math.ceil((new Date(dates.endDate)-new Date(dates.startDate))/(1000*60*60*24))+1,\" days)\"]})]})]})]})]})}),renderCustomRangeTable()]});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","DatePickerCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","yesterdayData","setYesterdayData","currentWeekData","setCurrentWeekData","monthToDateData","setMonthToDateData","dates","setDates","startDate","endDate","customRangeData","setCustomRangeData","loading","setLoading","generateMonthPeriods","periods","start","Date","end","current","getFullYear","getMonth","monthStart","monthEnd","periodStart","periodEnd","push","label","toLocaleString","month","year","formatDate","fullMonth","setMonth","fetchCustomRangeData","alert","periodData","Promise","all","map","period","_creatorsResponse$dat","performanceResponse","flashSalesResponse","creatorsResponse","gmvPerVideoResponse","refundRateResponse","get","params","start_time","end_time","page_size","page_no","totalGmv","data","gmv","flashSalesPerformance","total_sales","topPerformingCreators","top_creators","length","gmvPerVideo","refundRate","refund_rate","tiktokCampaign","error","console","concat","date","String","padStart","day","getDate","getStartOfWeek","startOfWeek","getDay","diff","setDate","getStartOfMonth","startOfMonth","calculateTotals","reduce","sum","Math","max","fetchData","currentDate","yesterday","formattedYesterday","formattedEndOfWeek","formattedEndOfMonth","yesterdayPerformanceResponse","currentWeekPerformanceResponse","monthToDatePerformanceResponse","yesterdayflashsales","currentWeekflashsales","monthToDateflashsales","dailycreatorsResponse","weaklycreatorsResponse","monthlycreatorsResponse","start_date","end_date","dailygmvPervideo","weeklygmvPervideo","monthlygmvPervideo","dailyRefundrate","weeklyRefundrate","monthlyRefundrate","gmvpervideo","refundrate","Tiktokcompaign","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatPercentage","value","toFixed","renderTable","title","bgColor","className","children","renderCustomRangeTable","totals","index","colSpan","abs","onDatesChange","onClick","disabled","toLocaleDateString","ceil"],"sources":["/Users/yousafzahid/Documents/GitHub/TT_app/frontend/src/components/Dashboard.jsx"],"sourcesContent":["// export default Dashboard;\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport \"./Dashboard.css\";\nimport DatePickerCard from './Datepicker';\n\nconst Dashboard = () => {\n  const [yesterdayData, setYesterdayData] = useState({});\n  const [currentWeekData, setCurrentWeekData] = useState({});\n  const [monthToDateData, setMonthToDateData] = useState({});\n  const [dates, setDates] = useState({ startDate: '', endDate: '' });\n  // const [data, setData] = useState(null);\n  const [customRangeData, setCustomRangeData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  // const [selectedPeriods, setSelectedPeriods] = useState([]);\n\n  // Function to generate month periods between start and end date\n  const generateMonthPeriods = (startDate, endDate) => {\n    const periods = [];\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    \n    let current = new Date(start.getFullYear(), start.getMonth(), 1);\n    \n    while (current <= end) {\n      const monthStart = new Date(current);\n      const monthEnd = new Date(current.getFullYear(), current.getMonth() + 1, 0);\n      \n      // Adjust for the actual range\n      const periodStart = monthStart < start ? start : monthStart;\n      const periodEnd = monthEnd > end ? end : monthEnd;\n      \n      periods.push({\n        label: current.toLocaleString('default', { month: 'short', year: 'numeric' }),\n        startDate: formatDate(periodStart),\n        endDate: formatDate(periodEnd),\n        fullMonth: monthStart >= start && monthEnd <= end\n      });\n      \n      current.setMonth(current.getMonth() + 1);\n    }\n    \n    return periods;\n  };\n\n  const fetchCustomRangeData = async () => {\n    if (!dates.startDate || !dates.endDate) {\n      alert('Please select both start and end dates');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const periods = generateMonthPeriods(dates.startDate, dates.endDate);\n      \n      \n      const periodData = await Promise.all(\n        periods.map(async (period) => {\n          try {\n            // Fetch all required data for this period\n            const [\n              performanceResponse,\n              flashSalesResponse,\n              creatorsResponse,\n              gmvPerVideoResponse,\n              refundRateResponse\n            ] = await Promise.all([\n              axios.get('/api/shop/performance', {\n                params: {\n                  start_time: period.startDate,\n                  end_time: period.endDate,\n                  page_size: 10,\n                  page_no: 1\n                }\n              }),\n              axios.get('/api/flash_sales_performance', {\n                params: {\n                  start_time: period.startDate,\n                  end_time: period.endDate,\n                  page_size: 10,\n                  page_no: 1\n                }\n              }),\n              axios.get('/api/top_performing_creators', {\n                params: {\n                  start_time: period.startDate,\n                  end_time: period.endDate,\n                  page_size: 10,\n                  page_no: 1\n                }\n              }),\n              axios.get('/api/Gmv_per_video', {\n                params: {\n                  start_time: period.startDate,\n                  end_time: period.endDate,\n                  page_size: 10,\n                  page_no: 1\n                }\n              }),\n              axios.get('/api/calculate_refund_rate', {\n                params: {\n                  start_time: period.startDate,\n                  end_time: period.endDate,\n                  page_size: 10,\n                  page_no: 1\n                }\n              })\n            ]);\n\n            return {\n              period: period.label,\n              startDate: period.startDate,\n              endDate: period.endDate,\n              totalGmv: performanceResponse.data.gmv || 0,\n              flashSalesPerformance: flashSalesResponse.data.total_sales || 0,\n              topPerformingCreators: creatorsResponse.data.top_creators?.length || 0,\n              gmvPerVideo: gmvPerVideoResponse.data.gmv || 0,\n              refundRate: refundRateResponse.data.refund_rate || 0,\n              tiktokCampaign: performanceResponse.data.gmv || 0 // Using GMV as campaign outcome\n            };\n          } catch (error) {\n            console.error(`Error fetching data for period ${period.label}:`, error);\n            return {\n              period: period.label,\n              startDate: period.startDate,\n              endDate: period.endDate,\n              totalGmv: 0,\n              flashSalesPerformance: 0,\n              topPerformingCreators: 0,\n              gmvPerVideo: 0,\n              refundRate: 0,\n              tiktokCampaign: 0,\n              error: true\n            };\n          }\n        })\n      );\n\n      setCustomRangeData(periodData);\n    } catch (error) {\n      console.error('Error fetching custom range data:', error);\n      alert('Error fetching data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // const fetchPerformance = async () => {\n  //   try {\n  //     const response = await axios.get('/api/shop/performance', {\n  //       params: {\n  //         start_time: dates.startDate,\n  //         end_time: dates.endDate,\n  //         page_size: 10,\n  //         page_no: 1,\n  //       },\n  //     });\n  //     setData(response.data);\n  //   } catch (error) {\n  //     console.error('API call error:', error);\n  //   }\n  // };\n\n  // Helper function to format dates as 'YYYY-MM-DD'\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // Helper function to get the start of the current week (Monday)\n  const getStartOfWeek = useCallback((date) => {\n    const startOfWeek = new Date(date);\n    const day = startOfWeek.getDay();\n    const diff = startOfWeek.getDate() - day + (day === 0 ? -6 : 1);\n    startOfWeek.setDate(diff);\n    return formatDate(startOfWeek);\n  }, []);\n  \n  const getStartOfMonth = useCallback((date) => {\n    const startOfMonth = new Date(date);\n    startOfMonth.setDate(1);\n    return formatDate(startOfMonth);\n  }, []);\n\n  // Calculate percentage change\n  // const calculatePercentageChange = (current, previous) => {\n  //   if (previous === 0) {\n  //     return current > 0 ? '+100.0%' : '0.0%';\n  //   }\n  //   const change = ((current - previous) / previous) * 100;\n  //   const sign = change >= 0 ? '+' : '';\n  //   return `${sign}${change.toFixed(1)}%`;\n  // };\n\n  // Calculate totals for the custom range table\n  const calculateTotals = () => {\n    if (customRangeData.length === 0) return {};\n    \n    return {\n      totalGmv: customRangeData.reduce((sum, period) => sum + period.totalGmv, 0),\n      flashSalesPerformance: customRangeData.reduce((sum, period) => sum + period.flashSalesPerformance, 0),\n      topPerformingCreators: Math.max(...customRangeData.map(period => period.topPerformingCreators), 0),\n      gmvPerVideo: customRangeData.reduce((sum, period) => sum + period.gmvPerVideo, 0) / customRangeData.length,\n      refundRate: customRangeData.reduce((sum, period) => sum + period.refundRate, 0) / customRangeData.length,\n      tiktokCampaign: customRangeData.reduce((sum, period) => sum + period.tiktokCampaign, 0)\n    };\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const currentDate = new Date();\n\n        // Get yesterday's date\n        const yesterday = new Date(currentDate);\n        yesterday.setDate(currentDate.getDate() - 1);\n        const formattedYesterday = formatDate(yesterday);\n\n        // Get start and end of current week\n        const startOfWeek = getStartOfWeek(currentDate);\n        const formattedEndOfWeek = formatDate(new Date(currentDate));\n\n        // Get start of the current month\n        const startOfMonth = getStartOfMonth(currentDate);\n        const formattedEndOfMonth = formatDate(currentDate);\n\n        // Fetch performance data for yesterday\n        const yesterdayPerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch performance data for the current week\n        const currentWeekPerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch performance data for the current month\n        const monthToDatePerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: startOfMonth,\n            end_time: formattedEndOfMonth,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        \n        // Fetch flash sales performance \n        const yesterdayflashsales = await axios.get('/api/flash_sales_performance', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        const currentWeekflashsales = await axios.get('/api/flash_sales_performance', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        const monthToDateflashsales = await axios.get('/api/flash_sales_performance', {\n          params: {\n            start_time: startOfMonth,\n            end_time: formattedEndOfMonth,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch top-performing creators for each period\n        const dailycreatorsResponse = await axios.get('/api/top_performing_creators', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const weaklycreatorsResponse = await axios.get('/api/top_performing_creators', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const monthlycreatorsResponse = await axios.get('/api/top_performing_creators', {\n          params: {\n            start_date: startOfMonth,\n            end_date: formattedEndOfMonth,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        const dailygmvPervideo = await axios.get('/api/Gmv_per_video', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const weeklygmvPervideo = await axios.get('/api/Gmv_per_video', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const monthlygmvPervideo = await axios.get('/api/Gmv_per_video', {\n          params: {\n            start_date: startOfMonth,\n            end_date: formattedEndOfMonth,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const dailyRefundrate = await axios.get('/api/calculate_refund_rate', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const weeklyRefundrate = await axios.get('/api/calculate_refund_rate', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n        const monthlyRefundrate = await axios.get('/api/calculate_refund_rate', {\n          params: {\n            start_date: startOfMonth,\n            end_date: formattedEndOfMonth,\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Update the dashboard state with the fetched data\n        setYesterdayData({\n          totalGmv: yesterdayPerformanceResponse.data.gmv,\n          flashSalesPerformance: yesterdayflashsales.data.total_sales,\n          topPerformingCreators: dailycreatorsResponse.data.top_creators.length,\n          gmvpervideo: dailygmvPervideo.data.gmv,\n          refundrate: dailyRefundrate.data.refund_rate,\n          Tiktokcompaign: yesterdayPerformanceResponse.data.gmv\n        });\n\n        setCurrentWeekData({\n          totalGmv: currentWeekPerformanceResponse.data.gmv,\n          flashSalesPerformance: currentWeekflashsales.data.total_sales,\n          topPerformingCreators: weaklycreatorsResponse.data.top_creators.length,\n          gmvpervideo: weeklygmvPervideo.data.gmv,\n          refundrate: weeklyRefundrate.data.refund_rate,\n          Tiktokcompaign: currentWeekPerformanceResponse.data.gmv\n        });\n\n        setMonthToDateData({\n          totalGmv: monthToDatePerformanceResponse.data.gmv,\n          flashSalesPerformance: monthToDateflashsales.data.total_sales,\n          topPerformingCreators: monthlycreatorsResponse.data.top_creators.length,\n          gmvpervideo: monthlygmvPervideo.data.gmv,\n          refundrate: monthlyRefundrate.data.refund_rate,\n          Tiktokcompaign: monthToDatePerformanceResponse.data.gmv\n        });\n\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [getStartOfMonth, getStartOfWeek]);\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const formatPercentage = (value) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  const renderTable = (data, title, period, bgColor) => (\n    <div className=\"analytics-table\">\n      <div className={`table-header ${bgColor}`}>\n        <h3>{title}</h3>\n        <span className=\"period\">{period}</span>\n      </div>\n      <div className=\"table-content\">\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">TOTAL GMV</span>\n          <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n          <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">TOP-PERFORMING CREATORS</span>\n          <span className=\"metric-value\">{data.topPerformingCreators}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">GMV PER VIDEO</span>\n          <span className=\"metric-value\">{data.gmvpervideo}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">Refund Rate</span>\n          <span className=\"metric-value\">{data.refundrate}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">Tiktok Campaign outcome</span>\n          <span className=\"metric-value\">{data.Tiktokcompaign}</span>\n        </div>\n      </div>\n    </div>\n  );\n\n  // New custom range table component\n  const renderCustomRangeTable = () => {\n    if (customRangeData.length === 0) return null;\n\n    const totals = calculateTotals();\n\n    return (\n      <div className=\"custom-range-table-container\">\n        <div className=\"custom-range-header\">\n          <h2>Performance Analysis</h2>\n          <p className=\"date-range-info\">\n            From {dates.startDate} to {dates.endDate}\n          </p>\n        </div>\n        \n        <div className=\"performance-table\">\n          <table className=\"data-table\">\n            <thead>\n              <tr>\n                <th className=\"parameter-column\">Parameter/Date</th>\n                {customRangeData.map((period, index) => (\n                  <th key={index} className=\"period-column\">\n                    {period.period}\n                  </th>\n                ))}\n                <th className=\"total-column\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr className=\"section-header\">\n                <td colSpan={customRangeData.length + 2}>Sales Performance</td>\n              </tr>\n              \n              <tr>\n                <td className=\"metric-label\">GMV (raw)</td>\n                {customRangeData.map((period, index) => (\n                  <td key={index} className=\"metric-cell\">\n                    <div className=\"metric-value\">{formatCurrency(period.totalGmv)}</div>\n                    <div className={`metric-change ${period.totalGmv > 0 ? 'positive' : 'neutral'}`}>\n                      {period.totalGmv > 0 ? '+' : ''}{((period.totalGmv / (totals.totalGmv || 1)) * 100).toFixed(1)}%\n                    </div>\n                  </td>\n                ))}\n                <td className=\"total-cell\">{formatCurrency(totals.totalGmv)}</td>\n              </tr>\n\n              <tr>\n                <td className=\"metric-label\">Flash Sales Performance</td>\n                {customRangeData.map((period, index) => (\n                  <td key={index} className=\"metric-cell\">\n                    <div className=\"metric-value\">{formatCurrency(period.flashSalesPerformance)}</div>\n                    <div className={`metric-change ${period.flashSalesPerformance > 0 ? 'positive' : 'neutral'}`}>\n                      {period.flashSalesPerformance > 0 ? '+' : ''}{((period.flashSalesPerformance / (totals.flashSalesPerformance || 1)) * 100).toFixed(1)}%\n                    </div>\n                  </td>\n                ))}\n                <td className=\"total-cell\">{formatCurrency(totals.flashSalesPerformance)}</td>\n              </tr>\n\n              <tr>\n                <td className=\"metric-label\">Top Performing Creators</td>\n                {customRangeData.map((period, index) => (\n                  <td key={index} className=\"metric-cell\">\n                    <div className=\"metric-value\">{period.topPerformingCreators}</div>\n                    <div className=\"metric-change neutral\">\n                      {period.topPerformingCreators > 0 ? '+' : ''}{period.topPerformingCreators}\n                    </div>\n                  </td>\n                ))}\n                <td className=\"total-cell\">{totals.topPerformingCreators}</td>\n              </tr>\n\n              <tr>\n                <td className=\"metric-label\">GMV Per Video</td>\n                {customRangeData.map((period, index) => (\n                  <td key={index} className=\"metric-cell\">\n                    <div className=\"metric-value\">{formatCurrency(period.gmvPerVideo)}</div>\n                    <div className={`metric-change ${period.gmvPerVideo > 0 ? 'positive' : 'neutral'}`}>\n                      {period.gmvPerVideo > 0 ? '+' : ''}{formatPercentage((period.gmvPerVideo / (totals.gmvPerVideo || 1)) * 100)}\n                    </div>\n                  </td>\n                ))}\n                <td className=\"total-cell\">{formatCurrency(totals.gmvPerVideo)}</td>\n              </tr>\n\n              <tr>\n                <td className=\"metric-label\">Refund Rate</td>\n                {customRangeData.map((period, index) => (\n                  <td key={index} className=\"metric-cell\">\n                    <div className=\"metric-value\">{formatPercentage(period.refundRate)}</div>\n                    <div className={`metric-change ${period.refundRate < totals.refundRate ? 'positive' : 'negative'}`}>\n                      {period.refundRate < totals.refundRate ? '↓' : '↑'}{Math.abs(period.refundRate - totals.refundRate).toFixed(1)}%\n                    </div>\n                  </td>\n                ))}\n                <td className=\"total-cell\">{formatPercentage(totals.refundRate)}</td>\n              </tr>\n\n              <tr>\n                <td className=\"metric-label\">TikTok Campaign Outcome</td>\n                {customRangeData.map((period, index) => (\n                  <td key={index} className=\"metric-cell\">\n                    <div className=\"metric-value\">{formatCurrency(period.tiktokCampaign)}</div>\n                    <div className={`metric-change ${period.tiktokCampaign > 0 ? 'positive' : 'neutral'}`}>\n                      {period.tiktokCampaign > 0 ? '+' : ''}{((period.tiktokCampaign / (totals.tiktokCampaign || 1)) * 100).toFixed(1)}%\n                    </div>\n                  </td>\n                ))}\n                <td className=\"total-cell\">{formatCurrency(totals.tiktokCampaign)}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      {/* Original Dashboard Tables */}\n      <div className=\"tables-container\">\n        {renderTable(\n          yesterdayData,\n          'Yesterday',\n          `Yesterday (${formatDate(new Date())})`,\n          'header-blue'\n        )}\n        {renderTable(\n          currentWeekData,\n          'Current Week',\n          `Week (${getStartOfWeek(new Date())} - ${formatDate(new Date())})`,\n          'header-green'\n        )}\n        {renderTable(\n          monthToDateData,\n          'Month to date',\n          `Month (${getStartOfMonth(new Date())} - ${formatDate(new Date())})`,\n          'header-red'\n        )}\n      </div>\n\n      {/* Date Range Selection Section */}\n      <div className=\"date-range-section\">\n        <div className=\"date-range-card\">\n          <div className=\"card-header\">\n            <div className=\"header-content\">\n              <h2 className=\"card-title\">📊 Performance Analysis</h2>\n              <p className=\"card-subtitle\">Select a date range to analyze your business metrics</p>\n            </div>\n          </div>\n          \n          <div className=\"card-body\">\n            <DatePickerCard onDatesChange={setDates} />\n            \n            <div className=\"action-section\">\n              <button\n                className={`analyze-button ${(!dates.startDate || !dates.endDate || loading) ? 'disabled' : ''}`}\n                onClick={fetchCustomRangeData}\n                disabled={!dates.startDate || !dates.endDate || loading}\n              >\n                {loading ? (\n                  <>\n                    <span className=\"loading-spinner\"></span>\n                    Analyzing...\n                  </>\n                ) : (\n                  <>\n                    <span className=\"button-icon\">🔍</span>\n                    Analyze Performance\n                  </>\n                )}\n              </button>\n              \n              {dates.startDate && dates.endDate && (\n                <div className=\"selected-range-display\">\n                  <span className=\"range-label\">Selected Range:</span>\n                  <span className=\"range-text\">\n                    {new Date(dates.startDate).toLocaleDateString('en-US', { \n                      month: 'short', \n                      day: 'numeric', \n                      year: 'numeric' \n                    })} - {new Date(dates.endDate).toLocaleDateString('en-US', { \n                      month: 'short', \n                      day: 'numeric', \n                      year: 'numeric' \n                    })}\n                  </span>\n                  <span className=\"range-duration\">\n                    ({Math.ceil((new Date(dates.endDate) - new Date(dates.startDate)) / (1000 * 60 * 60 * 24)) + 1} days)\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Custom Range Table */}\n      {renderCustomRangeTable()}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAC/D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,iBAAiB,CACxB,MAAO,CAAAC,cAAc,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1C,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtD,KAAM,CAACa,eAAe,CAAEC,kBAAkB,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1D,KAAM,CAACe,eAAe,CAAEC,kBAAkB,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1D,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,CAAEmB,SAAS,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CAClE;AACA,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACuB,OAAO,CAAEC,UAAU,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CAC7C;AAEA;AACA,KAAM,CAAAyB,oBAAoB,CAAGA,CAACN,SAAS,CAAEC,OAAO,GAAK,CACnD,KAAM,CAAAM,OAAO,CAAG,EAAE,CAClB,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAACT,SAAS,CAAC,CACjC,KAAM,CAAAU,GAAG,CAAG,GAAI,CAAAD,IAAI,CAACR,OAAO,CAAC,CAE7B,GAAI,CAAAU,OAAO,CAAG,GAAI,CAAAF,IAAI,CAACD,KAAK,CAACI,WAAW,CAAC,CAAC,CAAEJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAC,CAEhE,MAAOF,OAAO,EAAID,GAAG,CAAE,CACrB,KAAM,CAAAI,UAAU,CAAG,GAAI,CAAAL,IAAI,CAACE,OAAO,CAAC,CACpC,KAAM,CAAAI,QAAQ,CAAG,GAAI,CAAAN,IAAI,CAACE,OAAO,CAACC,WAAW,CAAC,CAAC,CAAED,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAE,CAAC,CAAC,CAE3E;AACA,KAAM,CAAAG,WAAW,CAAGF,UAAU,CAAGN,KAAK,CAAGA,KAAK,CAAGM,UAAU,CAC3D,KAAM,CAAAG,SAAS,CAAGF,QAAQ,CAAGL,GAAG,CAAGA,GAAG,CAAGK,QAAQ,CAEjDR,OAAO,CAACW,IAAI,CAAC,CACXC,KAAK,CAAER,OAAO,CAACS,cAAc,CAAC,SAAS,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,IAAI,CAAE,SAAU,CAAC,CAAC,CAC7EtB,SAAS,CAAEuB,UAAU,CAACP,WAAW,CAAC,CAClCf,OAAO,CAAEsB,UAAU,CAACN,SAAS,CAAC,CAC9BO,SAAS,CAAEV,UAAU,EAAIN,KAAK,EAAIO,QAAQ,EAAIL,GAChD,CAAC,CAAC,CAEFC,OAAO,CAACc,QAAQ,CAACd,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAC,CAC1C,CAEA,MAAO,CAAAN,OAAO,CAChB,CAAC,CAED,KAAM,CAAAmB,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CAAC5B,KAAK,CAACE,SAAS,EAAI,CAACF,KAAK,CAACG,OAAO,CAAE,CACtC0B,KAAK,CAAC,wCAAwC,CAAC,CAC/C,OACF,CAEAtB,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAE,OAAO,CAAGD,oBAAoB,CAACR,KAAK,CAACE,SAAS,CAAEF,KAAK,CAACG,OAAO,CAAC,CAGpE,KAAM,CAAA2B,UAAU,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAClCvB,OAAO,CAACwB,GAAG,CAAC,KAAO,CAAAC,MAAM,EAAK,CAC5B,GAAI,KAAAC,qBAAA,CACF;AACA,KAAM,CACJC,mBAAmB,CACnBC,kBAAkB,CAClBC,gBAAgB,CAChBC,mBAAmB,CACnBC,kBAAkB,CACnB,CAAG,KAAM,CAAAT,OAAO,CAACC,GAAG,CAAC,CACpB/C,KAAK,CAACwD,GAAG,CAAC,uBAAuB,CAAE,CACjCC,MAAM,CAAE,CACNC,UAAU,CAAET,MAAM,CAAChC,SAAS,CAC5B0C,QAAQ,CAAEV,MAAM,CAAC/B,OAAO,CACxB0C,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF7D,KAAK,CAACwD,GAAG,CAAC,8BAA8B,CAAE,CACxCC,MAAM,CAAE,CACNC,UAAU,CAAET,MAAM,CAAChC,SAAS,CAC5B0C,QAAQ,CAAEV,MAAM,CAAC/B,OAAO,CACxB0C,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF7D,KAAK,CAACwD,GAAG,CAAC,8BAA8B,CAAE,CACxCC,MAAM,CAAE,CACNC,UAAU,CAAET,MAAM,CAAChC,SAAS,CAC5B0C,QAAQ,CAAEV,MAAM,CAAC/B,OAAO,CACxB0C,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF7D,KAAK,CAACwD,GAAG,CAAC,oBAAoB,CAAE,CAC9BC,MAAM,CAAE,CACNC,UAAU,CAAET,MAAM,CAAChC,SAAS,CAC5B0C,QAAQ,CAAEV,MAAM,CAAC/B,OAAO,CACxB0C,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF7D,KAAK,CAACwD,GAAG,CAAC,4BAA4B,CAAE,CACtCC,MAAM,CAAE,CACNC,UAAU,CAAET,MAAM,CAAChC,SAAS,CAC5B0C,QAAQ,CAAEV,MAAM,CAAC/B,OAAO,CACxB0C,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACH,CAAC,CAEF,MAAO,CACLZ,MAAM,CAAEA,MAAM,CAACb,KAAK,CACpBnB,SAAS,CAAEgC,MAAM,CAAChC,SAAS,CAC3BC,OAAO,CAAE+B,MAAM,CAAC/B,OAAO,CACvB4C,QAAQ,CAAEX,mBAAmB,CAACY,IAAI,CAACC,GAAG,EAAI,CAAC,CAC3CC,qBAAqB,CAAEb,kBAAkB,CAACW,IAAI,CAACG,WAAW,EAAI,CAAC,CAC/DC,qBAAqB,CAAE,EAAAjB,qBAAA,CAAAG,gBAAgB,CAACU,IAAI,CAACK,YAAY,UAAAlB,qBAAA,iBAAlCA,qBAAA,CAAoCmB,MAAM,GAAI,CAAC,CACtEC,WAAW,CAAEhB,mBAAmB,CAACS,IAAI,CAACC,GAAG,EAAI,CAAC,CAC9CO,UAAU,CAAEhB,kBAAkB,CAACQ,IAAI,CAACS,WAAW,EAAI,CAAC,CACpDC,cAAc,CAAEtB,mBAAmB,CAACY,IAAI,CAACC,GAAG,EAAI,CAAE;AACpD,CAAC,CACH,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,mCAAAE,MAAA,CAAmC3B,MAAM,CAACb,KAAK,MAAKsC,KAAK,CAAC,CACvE,MAAO,CACLzB,MAAM,CAAEA,MAAM,CAACb,KAAK,CACpBnB,SAAS,CAAEgC,MAAM,CAAChC,SAAS,CAC3BC,OAAO,CAAE+B,MAAM,CAAC/B,OAAO,CACvB4C,QAAQ,CAAE,CAAC,CACXG,qBAAqB,CAAE,CAAC,CACxBE,qBAAqB,CAAE,CAAC,CACxBG,WAAW,CAAE,CAAC,CACdC,UAAU,CAAE,CAAC,CACbE,cAAc,CAAE,CAAC,CACjBC,KAAK,CAAE,IACT,CAAC,CACH,CACF,CAAC,CACH,CAAC,CAEDtD,kBAAkB,CAACyB,UAAU,CAAC,CAChC,CAAE,MAAO6B,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzD9B,KAAK,CAAC,wCAAwC,CAAC,CACjD,CAAC,OAAS,CACRtB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,KAAM,CAAAkB,UAAU,CAAIqC,IAAI,EAAK,CAC3B,KAAM,CAAAtC,IAAI,CAAGsC,IAAI,CAAChD,WAAW,CAAC,CAAC,CAC/B,KAAM,CAAAS,KAAK,CAAGwC,MAAM,CAACD,IAAI,CAAC/C,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAC,CAACiD,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC1D,KAAM,CAAAC,GAAG,CAAGF,MAAM,CAACD,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CACnD,SAAAH,MAAA,CAAUrC,IAAI,MAAAqC,MAAA,CAAItC,KAAK,MAAAsC,MAAA,CAAII,GAAG,EAChC,CAAC,CAED;AACA,KAAM,CAAAE,cAAc,CAAGnF,WAAW,CAAE8E,IAAI,EAAK,CAC3C,KAAM,CAAAM,WAAW,CAAG,GAAI,CAAAzD,IAAI,CAACmD,IAAI,CAAC,CAClC,KAAM,CAAAG,GAAG,CAAGG,WAAW,CAACC,MAAM,CAAC,CAAC,CAChC,KAAM,CAAAC,IAAI,CAAGF,WAAW,CAACF,OAAO,CAAC,CAAC,CAAGD,GAAG,EAAIA,GAAG,GAAK,CAAC,CAAG,CAAC,CAAC,CAAG,CAAC,CAAC,CAC/DG,WAAW,CAACG,OAAO,CAACD,IAAI,CAAC,CACzB,MAAO,CAAA7C,UAAU,CAAC2C,WAAW,CAAC,CAChC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,eAAe,CAAGxF,WAAW,CAAE8E,IAAI,EAAK,CAC5C,KAAM,CAAAW,YAAY,CAAG,GAAI,CAAA9D,IAAI,CAACmD,IAAI,CAAC,CACnCW,YAAY,CAACF,OAAO,CAAC,CAAC,CAAC,CACvB,MAAO,CAAA9C,UAAU,CAACgD,YAAY,CAAC,CACjC,CAAC,CAAE,EAAE,CAAC,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAItE,eAAe,CAACkD,MAAM,GAAK,CAAC,CAAE,MAAO,CAAC,CAAC,CAE3C,MAAO,CACLP,QAAQ,CAAE3C,eAAe,CAACuE,MAAM,CAAC,CAACC,GAAG,CAAE1C,MAAM,GAAK0C,GAAG,CAAG1C,MAAM,CAACa,QAAQ,CAAE,CAAC,CAAC,CAC3EG,qBAAqB,CAAE9C,eAAe,CAACuE,MAAM,CAAC,CAACC,GAAG,CAAE1C,MAAM,GAAK0C,GAAG,CAAG1C,MAAM,CAACgB,qBAAqB,CAAE,CAAC,CAAC,CACrGE,qBAAqB,CAAEyB,IAAI,CAACC,GAAG,CAAC,GAAG1E,eAAe,CAAC6B,GAAG,CAACC,MAAM,EAAIA,MAAM,CAACkB,qBAAqB,CAAC,CAAE,CAAC,CAAC,CAClGG,WAAW,CAAEnD,eAAe,CAACuE,MAAM,CAAC,CAACC,GAAG,CAAE1C,MAAM,GAAK0C,GAAG,CAAG1C,MAAM,CAACqB,WAAW,CAAE,CAAC,CAAC,CAAGnD,eAAe,CAACkD,MAAM,CAC1GE,UAAU,CAAEpD,eAAe,CAACuE,MAAM,CAAC,CAACC,GAAG,CAAE1C,MAAM,GAAK0C,GAAG,CAAG1C,MAAM,CAACsB,UAAU,CAAE,CAAC,CAAC,CAAGpD,eAAe,CAACkD,MAAM,CACxGI,cAAc,CAAEtD,eAAe,CAACuE,MAAM,CAAC,CAACC,GAAG,CAAE1C,MAAM,GAAK0C,GAAG,CAAG1C,MAAM,CAACwB,cAAc,CAAE,CAAC,CACxF,CAAC,CACH,CAAC,CAED5E,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiG,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAArE,IAAI,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAsE,SAAS,CAAG,GAAI,CAAAtE,IAAI,CAACqE,WAAW,CAAC,CACvCC,SAAS,CAACV,OAAO,CAACS,WAAW,CAACd,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAC5C,KAAM,CAAAgB,kBAAkB,CAAGzD,UAAU,CAACwD,SAAS,CAAC,CAEhD;AACA,KAAM,CAAAb,WAAW,CAAGD,cAAc,CAACa,WAAW,CAAC,CAC/C,KAAM,CAAAG,kBAAkB,CAAG1D,UAAU,CAAC,GAAI,CAAAd,IAAI,CAACqE,WAAW,CAAC,CAAC,CAE5D;AACA,KAAM,CAAAP,YAAY,CAAGD,eAAe,CAACQ,WAAW,CAAC,CACjD,KAAM,CAAAI,mBAAmB,CAAG3D,UAAU,CAACuD,WAAW,CAAC,CAEnD;AACA,KAAM,CAAAK,4BAA4B,CAAG,KAAM,CAAApG,KAAK,CAACwD,GAAG,CAAC,uBAAuB,CAAE,CAC5EC,MAAM,CAAE,CACNC,UAAU,CAAEuC,kBAAkB,CAC9BtC,QAAQ,CAAEsC,kBAAkB,CAC5BrC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAwC,8BAA8B,CAAG,KAAM,CAAArG,KAAK,CAACwD,GAAG,CAAC,uBAAuB,CAAE,CAC9EC,MAAM,CAAE,CACNC,UAAU,CAAEyB,WAAW,CACvBxB,QAAQ,CAAEuC,kBAAkB,CAC5BtC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAyC,8BAA8B,CAAG,KAAM,CAAAtG,KAAK,CAACwD,GAAG,CAAC,uBAAuB,CAAE,CAC9EC,MAAM,CAAE,CACNC,UAAU,CAAE8B,YAAY,CACxB7B,QAAQ,CAAEwC,mBAAmB,CAC7BvC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAA0C,mBAAmB,CAAG,KAAM,CAAAvG,KAAK,CAACwD,GAAG,CAAC,8BAA8B,CAAE,CAC1EC,MAAM,CAAE,CACNC,UAAU,CAAEuC,kBAAkB,CAC9BtC,QAAQ,CAAEsC,kBAAkB,CAC5BrC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF,KAAM,CAAA2C,qBAAqB,CAAG,KAAM,CAAAxG,KAAK,CAACwD,GAAG,CAAC,8BAA8B,CAAE,CAC5EC,MAAM,CAAE,CACNC,UAAU,CAAEyB,WAAW,CACvBxB,QAAQ,CAAEuC,kBAAkB,CAC5BtC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF,KAAM,CAAA4C,qBAAqB,CAAG,KAAM,CAAAzG,KAAK,CAACwD,GAAG,CAAC,8BAA8B,CAAE,CAC5EC,MAAM,CAAE,CACNC,UAAU,CAAE8B,YAAY,CACxB7B,QAAQ,CAAEwC,mBAAmB,CAC7BvC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAA6C,qBAAqB,CAAG,KAAM,CAAA1G,KAAK,CAACwD,GAAG,CAAC,8BAA8B,CAAE,CAC5EC,MAAM,CAAE,CACNC,UAAU,CAAEuC,kBAAkB,CAC9BtC,QAAQ,CAAEsC,kBAAkB,CAC5BrC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF,KAAM,CAAA8C,sBAAsB,CAAG,KAAM,CAAA3G,KAAK,CAACwD,GAAG,CAAC,8BAA8B,CAAE,CAC7EC,MAAM,CAAE,CACNC,UAAU,CAAEyB,WAAW,CACvBxB,QAAQ,CAAEuC,kBAAkB,CAC5BtC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF,KAAM,CAAA+C,uBAAuB,CAAG,KAAM,CAAA5G,KAAK,CAACwD,GAAG,CAAC,8BAA8B,CAAE,CAC9EC,MAAM,CAAE,CACNoD,UAAU,CAAErB,YAAY,CACxBsB,QAAQ,CAAEX,mBAAmB,CAC7BvC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF,KAAM,CAAAkD,gBAAgB,CAAG,KAAM,CAAA/G,KAAK,CAACwD,GAAG,CAAC,oBAAoB,CAAE,CAC7DC,MAAM,CAAE,CACNC,UAAU,CAAEuC,kBAAkB,CAC9BtC,QAAQ,CAAEsC,kBAAkB,CAC5BrC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF,KAAM,CAAAmD,iBAAiB,CAAG,KAAM,CAAAhH,KAAK,CAACwD,GAAG,CAAC,oBAAoB,CAAE,CAC9DC,MAAM,CAAE,CACNC,UAAU,CAAEyB,WAAW,CACvBxB,QAAQ,CAAEuC,kBAAkB,CAC5BtC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF,KAAM,CAAAoD,kBAAkB,CAAG,KAAM,CAAAjH,KAAK,CAACwD,GAAG,CAAC,oBAAoB,CAAE,CAC/DC,MAAM,CAAE,CACNoD,UAAU,CAAErB,YAAY,CACxBsB,QAAQ,CAAEX,mBAAmB,CAC7BvC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF,KAAM,CAAAqD,eAAe,CAAG,KAAM,CAAAlH,KAAK,CAACwD,GAAG,CAAC,4BAA4B,CAAE,CACpEC,MAAM,CAAE,CACNC,UAAU,CAAEuC,kBAAkB,CAC9BtC,QAAQ,CAAEsC,kBAAkB,CAC5BrC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF,KAAM,CAAAsD,gBAAgB,CAAG,KAAM,CAAAnH,KAAK,CAACwD,GAAG,CAAC,4BAA4B,CAAE,CACrEC,MAAM,CAAE,CACNC,UAAU,CAAEyB,WAAW,CACvBxB,QAAQ,CAAEuC,kBAAkB,CAC5BtC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CACF,KAAM,CAAAuD,iBAAiB,CAAG,KAAM,CAAApH,KAAK,CAACwD,GAAG,CAAC,4BAA4B,CAAE,CACtEC,MAAM,CAAE,CACNoD,UAAU,CAAErB,YAAY,CACxBsB,QAAQ,CAAEX,mBAAmB,CAC7BvC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF;AACAnD,gBAAgB,CAAC,CACfoD,QAAQ,CAAEsC,4BAA4B,CAACrC,IAAI,CAACC,GAAG,CAC/CC,qBAAqB,CAAEsC,mBAAmB,CAACxC,IAAI,CAACG,WAAW,CAC3DC,qBAAqB,CAAEuC,qBAAqB,CAAC3C,IAAI,CAACK,YAAY,CAACC,MAAM,CACrEgD,WAAW,CAAEN,gBAAgB,CAAChD,IAAI,CAACC,GAAG,CACtCsD,UAAU,CAAEJ,eAAe,CAACnD,IAAI,CAACS,WAAW,CAC5C+C,cAAc,CAAEnB,4BAA4B,CAACrC,IAAI,CAACC,GACpD,CAAC,CAAC,CAEFpD,kBAAkB,CAAC,CACjBkD,QAAQ,CAAEuC,8BAA8B,CAACtC,IAAI,CAACC,GAAG,CACjDC,qBAAqB,CAAEuC,qBAAqB,CAACzC,IAAI,CAACG,WAAW,CAC7DC,qBAAqB,CAAEwC,sBAAsB,CAAC5C,IAAI,CAACK,YAAY,CAACC,MAAM,CACtEgD,WAAW,CAAEL,iBAAiB,CAACjD,IAAI,CAACC,GAAG,CACvCsD,UAAU,CAAEH,gBAAgB,CAACpD,IAAI,CAACS,WAAW,CAC7C+C,cAAc,CAAElB,8BAA8B,CAACtC,IAAI,CAACC,GACtD,CAAC,CAAC,CAEFlD,kBAAkB,CAAC,CACjBgD,QAAQ,CAAEwC,8BAA8B,CAACvC,IAAI,CAACC,GAAG,CACjDC,qBAAqB,CAAEwC,qBAAqB,CAAC1C,IAAI,CAACG,WAAW,CAC7DC,qBAAqB,CAAEyC,uBAAuB,CAAC7C,IAAI,CAACK,YAAY,CAACC,MAAM,CACvEgD,WAAW,CAAEJ,kBAAkB,CAAClD,IAAI,CAACC,GAAG,CACxCsD,UAAU,CAAEF,iBAAiB,CAACrD,IAAI,CAACS,WAAW,CAC9C+C,cAAc,CAAEjB,8BAA8B,CAACvC,IAAI,CAACC,GACtD,CAAC,CAAC,CAEJ,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDoB,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACP,eAAe,CAAEL,cAAc,CAAC,CAAC,CAErC,KAAM,CAAAsC,cAAc,CAAIC,MAAM,EAAK,CACjC,MAAO,IAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACpCC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KAAK,CACfC,qBAAqB,CAAE,CACzB,CAAC,CAAC,CAACC,MAAM,CAACN,MAAM,CAAC,CACnB,CAAC,CAED,KAAM,CAAAO,gBAAgB,CAAIC,KAAK,EAAK,CAClC,SAAArD,MAAA,CAAUqD,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,MAC5B,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAACpE,IAAI,CAAEqE,KAAK,CAAEnF,MAAM,CAAEoF,OAAO,gBAC/ChI,KAAA,QAAKiI,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BlI,KAAA,QAAKiI,SAAS,iBAAA1D,MAAA,CAAkByD,OAAO,CAAG,CAAAE,QAAA,eACxCpI,IAAA,OAAAoI,QAAA,CAAKH,KAAK,CAAK,CAAC,cAChBjI,IAAA,SAAMmI,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAEtF,MAAM,CAAO,CAAC,EACrC,CAAC,cACN5C,KAAA,QAAKiI,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BlI,KAAA,QAAKiI,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,cAC/CpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEf,cAAc,CAACzD,IAAI,CAACD,QAAQ,CAAC,CAAO,CAAC,EAClE,CAAC,cACNzD,KAAA,QAAKiI,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,yBAAuB,CAAM,CAAC,cAC7DpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEf,cAAc,CAACzD,IAAI,CAACE,qBAAqB,CAAC,CAAO,CAAC,EAC/E,CAAC,cACN5D,KAAA,QAAKiI,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,yBAAuB,CAAM,CAAC,cAC7DpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAExE,IAAI,CAACI,qBAAqB,CAAO,CAAC,EAC/D,CAAC,cACN9D,KAAA,QAAKiI,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,eAAa,CAAM,CAAC,cACnDpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAExE,IAAI,CAACsD,WAAW,CAAO,CAAC,EACrD,CAAC,cACNhH,KAAA,QAAKiI,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,aAAW,CAAM,CAAC,cACjDpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAExE,IAAI,CAACuD,UAAU,CAAO,CAAC,EACpD,CAAC,cACNjH,KAAA,QAAKiI,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,yBAAuB,CAAM,CAAC,cAC7DpI,IAAA,SAAMmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAExE,IAAI,CAACwD,cAAc,CAAO,CAAC,EACxD,CAAC,EACH,CAAC,EACH,CACN,CAED;AACA,KAAM,CAAAiB,sBAAsB,CAAGA,CAAA,GAAM,CACnC,GAAIrH,eAAe,CAACkD,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAE7C,KAAM,CAAAoE,MAAM,CAAGhD,eAAe,CAAC,CAAC,CAEhC,mBACEpF,KAAA,QAAKiI,SAAS,CAAC,8BAA8B,CAAAC,QAAA,eAC3ClI,KAAA,QAAKiI,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCpI,IAAA,OAAAoI,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BlI,KAAA,MAAGiI,SAAS,CAAC,iBAAiB,CAAAC,QAAA,EAAC,OACxB,CAACxH,KAAK,CAACE,SAAS,CAAC,MAAI,CAACF,KAAK,CAACG,OAAO,EACvC,CAAC,EACD,CAAC,cAENf,IAAA,QAAKmI,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChClI,KAAA,UAAOiI,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC3BpI,IAAA,UAAAoI,QAAA,cACElI,KAAA,OAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,CACnDpH,eAAe,CAAC6B,GAAG,CAAC,CAACC,MAAM,CAAEyF,KAAK,gBACjCvI,IAAA,OAAgBmI,SAAS,CAAC,eAAe,CAAAC,QAAA,CACtCtF,MAAM,CAACA,MAAM,EADPyF,KAEL,CACL,CAAC,cACFvI,IAAA,OAAImI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAAK,CAAI,CAAC,EACrC,CAAC,CACA,CAAC,cACRlI,KAAA,UAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC5BpI,IAAA,OAAIwI,OAAO,CAAExH,eAAe,CAACkD,MAAM,CAAG,CAAE,CAAAkE,QAAA,CAAC,mBAAiB,CAAI,CAAC,CAC7D,CAAC,cAELlI,KAAA,OAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,WAAS,CAAI,CAAC,CAC1CpH,eAAe,CAAC6B,GAAG,CAAC,CAACC,MAAM,CAAEyF,KAAK,gBACjCrI,KAAA,OAAgBiI,SAAS,CAAC,aAAa,CAAAC,QAAA,eACrCpI,IAAA,QAAKmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEf,cAAc,CAACvE,MAAM,CAACa,QAAQ,CAAC,CAAM,CAAC,cACrEzD,KAAA,QAAKiI,SAAS,kBAAA1D,MAAA,CAAmB3B,MAAM,CAACa,QAAQ,CAAG,CAAC,CAAG,UAAU,CAAG,SAAS,CAAG,CAAAyE,QAAA,EAC7EtF,MAAM,CAACa,QAAQ,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAE,CAAEb,MAAM,CAACa,QAAQ,EAAI2E,MAAM,CAAC3E,QAAQ,EAAI,CAAC,CAAC,CAAI,GAAG,EAAEoE,OAAO,CAAC,CAAC,CAAC,CAAC,GACjG,EAAK,CAAC,GAJCQ,KAKL,CACL,CAAC,cACFvI,IAAA,OAAImI,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEf,cAAc,CAACiB,MAAM,CAAC3E,QAAQ,CAAC,CAAK,CAAC,EAC/D,CAAC,cAELzD,KAAA,OAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,yBAAuB,CAAI,CAAC,CACxDpH,eAAe,CAAC6B,GAAG,CAAC,CAACC,MAAM,CAAEyF,KAAK,gBACjCrI,KAAA,OAAgBiI,SAAS,CAAC,aAAa,CAAAC,QAAA,eACrCpI,IAAA,QAAKmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEf,cAAc,CAACvE,MAAM,CAACgB,qBAAqB,CAAC,CAAM,CAAC,cAClF5D,KAAA,QAAKiI,SAAS,kBAAA1D,MAAA,CAAmB3B,MAAM,CAACgB,qBAAqB,CAAG,CAAC,CAAG,UAAU,CAAG,SAAS,CAAG,CAAAsE,QAAA,EAC1FtF,MAAM,CAACgB,qBAAqB,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAE,CAAEhB,MAAM,CAACgB,qBAAqB,EAAIwE,MAAM,CAACxE,qBAAqB,EAAI,CAAC,CAAC,CAAI,GAAG,EAAEiE,OAAO,CAAC,CAAC,CAAC,CAAC,GACxI,EAAK,CAAC,GAJCQ,KAKL,CACL,CAAC,cACFvI,IAAA,OAAImI,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEf,cAAc,CAACiB,MAAM,CAACxE,qBAAqB,CAAC,CAAK,CAAC,EAC5E,CAAC,cAEL5D,KAAA,OAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,yBAAuB,CAAI,CAAC,CACxDpH,eAAe,CAAC6B,GAAG,CAAC,CAACC,MAAM,CAAEyF,KAAK,gBACjCrI,KAAA,OAAgBiI,SAAS,CAAC,aAAa,CAAAC,QAAA,eACrCpI,IAAA,QAAKmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEtF,MAAM,CAACkB,qBAAqB,CAAM,CAAC,cAClE9D,KAAA,QAAKiI,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EACnCtF,MAAM,CAACkB,qBAAqB,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAElB,MAAM,CAACkB,qBAAqB,EACvE,CAAC,GAJCuE,KAKL,CACL,CAAC,cACFvI,IAAA,OAAImI,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEE,MAAM,CAACtE,qBAAqB,CAAK,CAAC,EAC5D,CAAC,cAEL9D,KAAA,OAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,CAC9CpH,eAAe,CAAC6B,GAAG,CAAC,CAACC,MAAM,CAAEyF,KAAK,gBACjCrI,KAAA,OAAgBiI,SAAS,CAAC,aAAa,CAAAC,QAAA,eACrCpI,IAAA,QAAKmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEf,cAAc,CAACvE,MAAM,CAACqB,WAAW,CAAC,CAAM,CAAC,cACxEjE,KAAA,QAAKiI,SAAS,kBAAA1D,MAAA,CAAmB3B,MAAM,CAACqB,WAAW,CAAG,CAAC,CAAG,UAAU,CAAG,SAAS,CAAG,CAAAiE,QAAA,EAChFtF,MAAM,CAACqB,WAAW,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAE0D,gBAAgB,CAAE/E,MAAM,CAACqB,WAAW,EAAImE,MAAM,CAACnE,WAAW,EAAI,CAAC,CAAC,CAAI,GAAG,CAAC,EACzG,CAAC,GAJCoE,KAKL,CACL,CAAC,cACFvI,IAAA,OAAImI,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEf,cAAc,CAACiB,MAAM,CAACnE,WAAW,CAAC,CAAK,CAAC,EAClE,CAAC,cAELjE,KAAA,OAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,CAC5CpH,eAAe,CAAC6B,GAAG,CAAC,CAACC,MAAM,CAAEyF,KAAK,gBACjCrI,KAAA,OAAgBiI,SAAS,CAAC,aAAa,CAAAC,QAAA,eACrCpI,IAAA,QAAKmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEP,gBAAgB,CAAC/E,MAAM,CAACsB,UAAU,CAAC,CAAM,CAAC,cACzElE,KAAA,QAAKiI,SAAS,kBAAA1D,MAAA,CAAmB3B,MAAM,CAACsB,UAAU,CAAGkE,MAAM,CAAClE,UAAU,CAAG,UAAU,CAAG,UAAU,CAAG,CAAAgE,QAAA,EAChGtF,MAAM,CAACsB,UAAU,CAAGkE,MAAM,CAAClE,UAAU,CAAG,GAAG,CAAG,GAAG,CAAEqB,IAAI,CAACgD,GAAG,CAAC3F,MAAM,CAACsB,UAAU,CAAGkE,MAAM,CAAClE,UAAU,CAAC,CAAC2D,OAAO,CAAC,CAAC,CAAC,CAAC,GACjH,EAAK,CAAC,GAJCQ,KAKL,CACL,CAAC,cACFvI,IAAA,OAAImI,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEP,gBAAgB,CAACS,MAAM,CAAClE,UAAU,CAAC,CAAK,CAAC,EACnE,CAAC,cAELlE,KAAA,OAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,yBAAuB,CAAI,CAAC,CACxDpH,eAAe,CAAC6B,GAAG,CAAC,CAACC,MAAM,CAAEyF,KAAK,gBACjCrI,KAAA,OAAgBiI,SAAS,CAAC,aAAa,CAAAC,QAAA,eACrCpI,IAAA,QAAKmI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEf,cAAc,CAACvE,MAAM,CAACwB,cAAc,CAAC,CAAM,CAAC,cAC3EpE,KAAA,QAAKiI,SAAS,kBAAA1D,MAAA,CAAmB3B,MAAM,CAACwB,cAAc,CAAG,CAAC,CAAG,UAAU,CAAG,SAAS,CAAG,CAAA8D,QAAA,EACnFtF,MAAM,CAACwB,cAAc,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAE,CAAExB,MAAM,CAACwB,cAAc,EAAIgE,MAAM,CAAChE,cAAc,EAAI,CAAC,CAAC,CAAI,GAAG,EAAEyD,OAAO,CAAC,CAAC,CAAC,CAAC,GACnH,EAAK,CAAC,GAJCQ,KAKL,CACL,CAAC,cACFvI,IAAA,OAAImI,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEf,cAAc,CAACiB,MAAM,CAAChE,cAAc,CAAC,CAAK,CAAC,EACrE,CAAC,EACA,CAAC,EACH,CAAC,CACL,CAAC,EACH,CAAC,CAEV,CAAC,CAED,mBACEpE,KAAA,QAAKiI,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAElClI,KAAA,QAAKiI,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAC9BJ,WAAW,CACV1H,aAAa,CACb,WAAW,eAAAmE,MAAA,CACGpC,UAAU,CAAC,GAAI,CAAAd,IAAI,CAAC,CAAC,CAAC,MACpC,aACF,CAAC,CACAyG,WAAW,CACVxH,eAAe,CACf,cAAc,UAAAiE,MAAA,CACLM,cAAc,CAAC,GAAI,CAAAxD,IAAI,CAAC,CAAC,CAAC,QAAAkD,MAAA,CAAMpC,UAAU,CAAC,GAAI,CAAAd,IAAI,CAAC,CAAC,CAAC,MAC/D,cACF,CAAC,CACAyG,WAAW,CACVtH,eAAe,CACf,eAAe,WAAA+D,MAAA,CACLW,eAAe,CAAC,GAAI,CAAA7D,IAAI,CAAC,CAAC,CAAC,QAAAkD,MAAA,CAAMpC,UAAU,CAAC,GAAI,CAAAd,IAAI,CAAC,CAAC,CAAC,MACjE,YACF,CAAC,EACE,CAAC,cAGNvB,IAAA,QAAKmI,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjClI,KAAA,QAAKiI,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BpI,IAAA,QAAKmI,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BlI,KAAA,QAAKiI,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BpI,IAAA,OAAImI,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,mCAAuB,CAAI,CAAC,cACvDpI,IAAA,MAAGmI,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,sDAAoD,CAAG,CAAC,EAClF,CAAC,CACH,CAAC,cAENlI,KAAA,QAAKiI,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpI,IAAA,CAACF,cAAc,EAAC4I,aAAa,CAAE7H,QAAS,CAAE,CAAC,cAE3CX,KAAA,QAAKiI,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BpI,IAAA,WACEmI,SAAS,mBAAA1D,MAAA,CAAqB,CAAC7D,KAAK,CAACE,SAAS,EAAI,CAACF,KAAK,CAACG,OAAO,EAAIG,OAAO,CAAI,UAAU,CAAG,EAAE,CAAG,CACjGyH,OAAO,CAAEnG,oBAAqB,CAC9BoG,QAAQ,CAAE,CAAChI,KAAK,CAACE,SAAS,EAAI,CAACF,KAAK,CAACG,OAAO,EAAIG,OAAQ,CAAAkH,QAAA,CAEvDlH,OAAO,cACNhB,KAAA,CAAAE,SAAA,EAAAgI,QAAA,eACEpI,IAAA,SAAMmI,SAAS,CAAC,iBAAiB,CAAO,CAAC,eAE3C,EAAE,CAAC,cAEHjI,KAAA,CAAAE,SAAA,EAAAgI,QAAA,eACEpI,IAAA,SAAMmI,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,sBAEzC,EAAE,CACH,CACK,CAAC,CAERxH,KAAK,CAACE,SAAS,EAAIF,KAAK,CAACG,OAAO,eAC/Bb,KAAA,QAAKiI,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrCpI,IAAA,SAAMmI,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,iBAAe,CAAM,CAAC,cACpDlI,KAAA,SAAMiI,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzB,GAAI,CAAA7G,IAAI,CAACX,KAAK,CAACE,SAAS,CAAC,CAAC+H,kBAAkB,CAAC,OAAO,CAAE,CACrD1G,KAAK,CAAE,OAAO,CACd0C,GAAG,CAAE,SAAS,CACdzC,IAAI,CAAE,SACR,CAAC,CAAC,CAAC,KAAG,CAAC,GAAI,CAAAb,IAAI,CAACX,KAAK,CAACG,OAAO,CAAC,CAAC8H,kBAAkB,CAAC,OAAO,CAAE,CACzD1G,KAAK,CAAE,OAAO,CACd0C,GAAG,CAAE,SAAS,CACdzC,IAAI,CAAE,SACR,CAAC,CAAC,EACE,CAAC,cACPlC,KAAA,SAAMiI,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAC,GAC9B,CAAC3C,IAAI,CAACqD,IAAI,CAAC,CAAC,GAAI,CAAAvH,IAAI,CAACX,KAAK,CAACG,OAAO,CAAC,CAAG,GAAI,CAAAQ,IAAI,CAACX,KAAK,CAACE,SAAS,CAAC,GAAK,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAAG,CAAC,CAAC,QACjG,EAAM,CAAC,EACJ,CACN,EACE,CAAC,EACH,CAAC,EACH,CAAC,CACH,CAAC,CAGLuH,sBAAsB,CAAC,CAAC,EACtB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhI,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}