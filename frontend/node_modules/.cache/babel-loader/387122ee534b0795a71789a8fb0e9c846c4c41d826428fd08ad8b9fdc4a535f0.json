{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{useParams}from'react-router-dom';import axios from'axios';// import { ShoppingCart, TrendingUp, Package, AlertCircle, Calendar, DollarSign } from 'lucide-react';\nimport\"./AdminShopPerformance.css\";// Assuming custom styles for the Admin Shop Performance\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminShopPerformance=()=>{const{brandId}=useParams();// Get brandId from URL params\nconst[yesterdayData,setYesterdayData]=useState({});const[currentWeekData,setCurrentWeekData]=useState({});const[monthToDateData,setMonthToDateData]=useState({});// const [dates, setDates] = useState({ startDate: '', endDate: '' });\n// Helper function to format dates as 'YYYY-MM-DD'\nconst formatDate=date=>{const year=date.getFullYear();const month=String(date.getMonth()+1).padStart(2,'0');const day=String(date.getDate()).padStart(2,'0');return\"\".concat(year,\"-\").concat(month,\"-\").concat(day);};// Helper function to get the start of the current week (Monday)\nconst getStartOfWeek=useCallback(date=>{const startOfWeek=new Date(date);const day=startOfWeek.getDay();const diff=startOfWeek.getDate()-day+(day===0?-6:1);// Adjust if it's Sunday\nstartOfWeek.setDate(diff);return formatDate(startOfWeek);},[]);const getStartOfMonth=useCallback(date=>{const startOfMonth=new Date(date);startOfMonth.setDate(1);// Set the date to the 1st of the month\nreturn formatDate(startOfMonth);},[]);useEffect(()=>{const fetchData=async()=>{try{const currentDate=new Date();// Get yesterday's date\nconst yesterday=new Date(currentDate);yesterday.setDate(currentDate.getDate()-1);const formattedYesterday=formatDate(yesterday);// Get start and end of current week\nconst startOfWeek=getStartOfWeek(currentDate);const formattedEndOfWeek=formatDate(new Date(currentDate));// current day is the end of the week\n// Get start of the current month\nconst startOfMonth=getStartOfMonth(currentDate);const formattedEndOfMonth=formatDate(currentDate);// Fetch performance data (GMV, flash sales, etc.) for yesterday\nconst yesterdayPerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:formattedYesterday,end_time:formattedYesterday,brand_id:brandId,// Use the brandId for filtering\npage_size:10,page_no:1}});// Fetch performance data (GMV, flash sales, etc.) for the current week\nconst currentWeekPerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,brand_id:brandId,// Use the brandId for filtering\npage_size:10,page_no:1}});// Fetch performance data (GMV, flash sales, etc.) for the current month\nconst monthToDatePerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:startOfMonth,end_time:formattedEndOfMonth,brand_id:brandId,// Use the brandId for filtering\npage_size:10,page_no:1}});// Fetch flash sales performance data for the periods\nconst yesterdayflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:formattedYesterday,end_time:formattedYesterday,brand_id:brandId,// Use brandId here too\npage_size:10,page_no:1}});const currentWeekflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,brand_id:brandId,// Use brandId here too\npage_size:10,page_no:1}});const monthToDateflashsales=await axios.get('/api/flash_sales_performance',{params:{start_time:startOfMonth,end_time:formattedEndOfMonth,brand_id:brandId,// Use brandId here too\npage_size:10,page_no:1}});// Update state with fetched data\nsetYesterdayData({totalGmv:yesterdayPerformanceResponse.data.gmv,flashSalesPerformance:yesterdayflashsales.data.total_sales});setCurrentWeekData({totalGmv:currentWeekPerformanceResponse.data.gmv,flashSalesPerformance:currentWeekflashsales.data.total_sales});setMonthToDateData({totalGmv:monthToDatePerformanceResponse.data.gmv,flashSalesPerformance:monthToDateflashsales.data.total_sales});}catch(error){console.error(\"Error fetching performance data:\",error);}};fetchData();},[brandId,getStartOfMonth,getStartOfWeek]);// Helper function to format currency\nconst formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:2}).format(amount);};const renderTable=(data,title,period,bgColor)=>/*#__PURE__*/_jsxs(\"div\",{className:\"analytics-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table-header \".concat(bgColor),children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsx(\"span\",{className:\"period\",children:period})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"TOTAL GMV\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:formatCurrency(data.totalGmv)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"FLASH SALES PERFORMANCE\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:formatCurrency(data.flashSalesPerformance)})]})]})]});return/*#__PURE__*/_jsxs(\"div\",{className:\"shop-performance-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Shop Performance\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tables-container\",children:[renderTable(yesterdayData,'Yesterday',\"Yesterday (\".concat(formatDate(new Date()),\")\"),'header-blue'),renderTable(currentWeekData,'Current Week',\"Week (\".concat(getStartOfWeek(new Date()),\" - \").concat(formatDate(new Date()),\")\"),'header-green'),renderTable(monthToDateData,'Month to date',\"Month (\".concat(getStartOfMonth(new Date()),\" - \").concat(formatDate(new Date()),\")\"),'header-red')]})]});};export default AdminShopPerformance;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useParams","axios","jsx","_jsx","jsxs","_jsxs","AdminShopPerformance","brandId","yesterdayData","setYesterdayData","currentWeekData","setCurrentWeekData","monthToDateData","setMonthToDateData","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","getStartOfWeek","startOfWeek","Date","getDay","diff","setDate","getStartOfMonth","startOfMonth","fetchData","currentDate","yesterday","formattedYesterday","formattedEndOfWeek","formattedEndOfMonth","yesterdayPerformanceResponse","get","params","start_time","end_time","brand_id","page_size","page_no","currentWeekPerformanceResponse","monthToDatePerformanceResponse","yesterdayflashsales","currentWeekflashsales","monthToDateflashsales","totalGmv","data","gmv","flashSalesPerformance","total_sales","error","console","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","renderTable","title","period","bgColor","className","children"],"sources":["/Users/yousafzahid/Documents/GitHub/TT_app/frontend/src/components/AdminShopPerformance.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n// import { ShoppingCart, TrendingUp, Package, AlertCircle, Calendar, DollarSign } from 'lucide-react';\nimport \"./AdminShopPerformance.css\";  // Assuming custom styles for the Admin Shop Performance\n\nconst AdminShopPerformance = () => {\n  const { brandId } = useParams();  // Get brandId from URL params\n  const [yesterdayData, setYesterdayData] = useState({});\n  const [currentWeekData, setCurrentWeekData] = useState({});\n  const [monthToDateData, setMonthToDateData] = useState({});\n  // const [dates, setDates] = useState({ startDate: '', endDate: '' });\n\n  // Helper function to format dates as 'YYYY-MM-DD'\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // Helper function to get the start of the current week (Monday)\n  const getStartOfWeek = useCallback((date) => {\n    const startOfWeek = new Date(date);\n    const day = startOfWeek.getDay();\n    const diff = startOfWeek.getDate() - day + (day === 0 ? -6 : 1); // Adjust if it's Sunday\n    startOfWeek.setDate(diff);\n    return formatDate(startOfWeek);\n  }, []);\n  \n  const getStartOfMonth = useCallback((date) => {\n    const startOfMonth = new Date(date);\n    startOfMonth.setDate(1); // Set the date to the 1st of the month\n    return formatDate(startOfMonth);\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const currentDate = new Date();\n\n        // Get yesterday's date\n        const yesterday = new Date(currentDate);\n        yesterday.setDate(currentDate.getDate() - 1);\n        const formattedYesterday = formatDate(yesterday);\n\n        // Get start and end of current week\n        const startOfWeek = getStartOfWeek(currentDate);\n        const formattedEndOfWeek = formatDate(new Date(currentDate)); // current day is the end of the week\n\n        // Get start of the current month\n        const startOfMonth = getStartOfMonth(currentDate);\n        const formattedEndOfMonth = formatDate(currentDate);\n\n        // Fetch performance data (GMV, flash sales, etc.) for yesterday\n        const yesterdayPerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            brand_id: brandId,  // Use the brandId for filtering\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch performance data (GMV, flash sales, etc.) for the current week\n        const currentWeekPerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            brand_id: brandId, // Use the brandId for filtering\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch performance data (GMV, flash sales, etc.) for the current month\n        const monthToDatePerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: startOfMonth,\n            end_time: formattedEndOfMonth,\n            brand_id: brandId,  // Use the brandId for filtering\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch flash sales performance data for the periods\n        const yesterdayflashsales = await axios.get('/api/flash_sales_performance', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            brand_id: brandId, // Use brandId here too\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        const currentWeekflashsales = await axios.get('/api/flash_sales_performance', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            brand_id: brandId, // Use brandId here too\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        const monthToDateflashsales = await axios.get('/api/flash_sales_performance', {\n          params: {\n            start_time: startOfMonth,\n            end_time: formattedEndOfMonth,\n            brand_id: brandId, // Use brandId here too\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Update state with fetched data\n        setYesterdayData({\n          totalGmv: yesterdayPerformanceResponse.data.gmv,\n          flashSalesPerformance: yesterdayflashsales.data.total_sales,\n        });\n\n        setCurrentWeekData({\n          totalGmv: currentWeekPerformanceResponse.data.gmv,\n          flashSalesPerformance: currentWeekflashsales.data.total_sales,\n        });\n\n        setMonthToDateData({\n          totalGmv: monthToDatePerformanceResponse.data.gmv,\n          flashSalesPerformance: monthToDateflashsales.data.total_sales,\n        });\n\n      } catch (error) {\n        console.error(\"Error fetching performance data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [brandId, getStartOfMonth, getStartOfWeek]);\n\n  // Helper function to format currency\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const renderTable = (data, title, period, bgColor) => (\n    <div className=\"analytics-table\">\n      <div className={`table-header ${bgColor}`}>\n        <h3>{title}</h3>\n        <span className=\"period\">{period}</span>\n      </div>\n      <div className=\"table-content\">\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">TOTAL GMV</span>\n          <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n          <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"shop-performance-container\">\n      <h1>Shop Performance</h1>\n      <div className=\"tables-container\">\n        {renderTable(\n          yesterdayData,\n          'Yesterday',\n          `Yesterday (${formatDate(new Date())})`,\n          'header-blue'\n        )}\n        {renderTable(\n          currentWeekData,\n          'Current Week',\n          `Week (${getStartOfWeek(new Date())} - ${formatDate(new Date())})`,\n          'header-green'\n        )}\n        {renderTable(\n          monthToDateData,\n          'Month to date',\n          `Month (${getStartOfMonth(new Date())} - ${formatDate(new Date())})`,\n          'header-red'\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminShopPerformance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}