{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{useParams}from'react-router-dom';import axios from'axios';import\"./ShopDetailPage.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ShopDetailPage=()=>{const{brandId}=useParams();// Get brandId from URL params\nconst[shopData,setShopData]=useState({yesterdayData:{},currentWeekData:{},monthToDateData:{}});// const [performanceData, setPerformanceData] = useState({\n//   yesterdayData: {},\n//   currentWeekData: {},\n//   monthToDateData: {}\n// });\n// const [dates, setDates] = useState({ startDate: '', endDate: '' });\n// const fetchShopPerformance = async () => {\n//   try {\n//     const response = await axios.get('/api/shop/performance', {\n//       params: {\n//         start_time: dates.startDate,\n//         end_time: dates.endDate,\n//         brand_id: brandId, // Pass the brandId for filtering shop performance\n//         page_size: 10,\n//         page_no: 1,\n//       },\n//     });\n//     setShopData((prevData) => ({\n//       ...prevData,\n//       shopPerformance: response.data,\n//     }));\n//   } catch (error) {\n//     console.error('Error fetching shop performance:', error);\n//   }\n// };\n// Helper functions to format dates\nconst formatDate=date=>{const year=date.getFullYear();const month=String(date.getMonth()+1).padStart(2,'0');const day=String(date.getDate()).padStart(2,'0');return\"\".concat(year,\"-\").concat(month,\"-\").concat(day);};const getStartOfWeek=useCallback(date=>{const startOfWeek=new Date(date);const day=startOfWeek.getDay();const diff=startOfWeek.getDate()-day+(day===0?-6:1);// Adjust if it's Sunday\nstartOfWeek.setDate(diff);return formatDate(startOfWeek);},[]);const getStartOfMonth=useCallback(date=>{const startOfMonth=new Date(date);startOfMonth.setDate(1);// Set the date to the 1st of the month\nreturn formatDate(startOfMonth);},[]);const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:2}).format(amount);};useEffect(()=>{const fetchData=async()=>{try{const currentDate=new Date();// Get yesterday's date\nconst yesterday=new Date(currentDate);yesterday.setDate(currentDate.getDate()-1);const formattedYesterday=formatDate(yesterday);// Get start and end of current week\nconst startOfWeek=getStartOfWeek(currentDate);const formattedEndOfWeek=formatDate(new Date(currentDate));// current day is the end of the week\n// Get start of the current month\nconst startOfMonth=getStartOfMonth(currentDate);const formattedEndOfMonth=formatDate(currentDate);// current day is the end of the month\n// Fetch performance data (GMV, flash sales, etc.) for yesterday\nconst yesterdayPerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:formattedYesterday,end_time:formattedYesterday,brand_id:brandId,// Pass brandId here\npage_size:10,page_no:1}});// Fetch performance data for the current week\nconst currentWeekPerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:startOfWeek,end_time:formattedEndOfWeek,brand_id:brandId,// Pass brandId here\npage_size:10,page_no:1}});// Fetch performance data for the current month\nconst monthToDatePerformanceResponse=await axios.get('/api/shop/performance',{params:{start_time:startOfMonth,end_time:formattedEndOfMonth,brand_id:brandId,// Pass brandId here\npage_size:10,page_no:1}});// Update the shop data state\nsetShopData({yesterdayData:yesterdayPerformanceResponse.data,currentWeekData:currentWeekPerformanceResponse.data,monthToDateData:monthToDatePerformanceResponse.data});}catch(error){console.error(\"Error fetching data:\",error);}};fetchData();},[brandId,getStartOfMonth,getStartOfWeek]);const renderTable=(data,title,period,bgColor)=>/*#__PURE__*/_jsxs(\"div\",{className:\"analytics-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table-header \".concat(bgColor),children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsx(\"span\",{className:\"period\",children:period})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"TOTAL GMV\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:formatCurrency(data.totalGmv)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"FLASH SALES PERFORMANCE\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:formatCurrency(data.flashSalesPerformance)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"TOP-PERFORMING CREATORS\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.topPerformingCreators})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"GMV PER VIDEO\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.gmvpervideo})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Refund Rate\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:data.refundrate})]})]})]});return/*#__PURE__*/_jsxs(\"div\",{className:\"shop-detail-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Shop Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tables-container\",children:[renderTable(shopData.yesterdayData,'Yesterday',\"Yesterday (\".concat(formatDate(new Date()),\")\"),'header-blue'),renderTable(shopData.currentWeekData,'Current Week',\"Week (\".concat(getStartOfWeek(new Date()),\" - \").concat(formatDate(new Date()),\")\"),'header-green'),renderTable(shopData.monthToDateData,'Month to date',\"Month (\".concat(getStartOfMonth(new Date()),\" - \").concat(formatDate(new Date()),\")\"),'header-red')]})]});};export default ShopDetailPage;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useParams","axios","jsx","_jsx","jsxs","_jsxs","ShopDetailPage","brandId","shopData","setShopData","yesterdayData","currentWeekData","monthToDateData","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","getStartOfWeek","startOfWeek","Date","getDay","diff","setDate","getStartOfMonth","startOfMonth","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","fetchData","currentDate","yesterday","formattedYesterday","formattedEndOfWeek","formattedEndOfMonth","yesterdayPerformanceResponse","get","params","start_time","end_time","brand_id","page_size","page_no","currentWeekPerformanceResponse","monthToDatePerformanceResponse","data","error","console","renderTable","title","period","bgColor","className","children","totalGmv","flashSalesPerformance","topPerformingCreators","gmvpervideo","refundrate"],"sources":["/Users/yousafzahid/Documents/GitHub/TT_app/frontend/src/components/ShopDetailPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport \"./ShopDetailPage.css\";\n\nconst ShopDetailPage = () => {\n  const { brandId } = useParams();  // Get brandId from URL params\n  const [shopData, setShopData] = useState({\n    yesterdayData: {},\n    currentWeekData: {},\n    monthToDateData: {}\n  });\n  // const [performanceData, setPerformanceData] = useState({\n  //   yesterdayData: {},\n  //   currentWeekData: {},\n  //   monthToDateData: {}\n  // });\n  // const [dates, setDates] = useState({ startDate: '', endDate: '' });\n\n  // const fetchShopPerformance = async () => {\n  //   try {\n  //     const response = await axios.get('/api/shop/performance', {\n  //       params: {\n  //         start_time: dates.startDate,\n  //         end_time: dates.endDate,\n  //         brand_id: brandId, // Pass the brandId for filtering shop performance\n  //         page_size: 10,\n  //         page_no: 1,\n  //       },\n  //     });\n  //     setShopData((prevData) => ({\n  //       ...prevData,\n  //       shopPerformance: response.data,\n  //     }));\n  //   } catch (error) {\n  //     console.error('Error fetching shop performance:', error);\n  //   }\n  // };\n\n\n  // Helper functions to format dates\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  const getStartOfWeek = useCallback((date) => {\n    const startOfWeek = new Date(date);\n    const day = startOfWeek.getDay();\n    const diff = startOfWeek.getDate() - day + (day === 0 ? -6 : 1); // Adjust if it's Sunday\n    startOfWeek.setDate(diff);\n    return formatDate(startOfWeek);\n  }, []);\n  \n  const getStartOfMonth = useCallback((date) => {\n    const startOfMonth = new Date(date);\n    startOfMonth.setDate(1); // Set the date to the 1st of the month\n    return formatDate(startOfMonth);\n  }, []);\n  \n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const currentDate = new Date();\n\n        // Get yesterday's date\n        const yesterday = new Date(currentDate);\n        yesterday.setDate(currentDate.getDate() - 1);\n        const formattedYesterday = formatDate(yesterday);\n\n        // Get start and end of current week\n        const startOfWeek = getStartOfWeek(currentDate);\n        const formattedEndOfWeek = formatDate(new Date(currentDate)); // current day is the end of the week\n\n        // Get start of the current month\n        const startOfMonth = getStartOfMonth(currentDate);\n        const formattedEndOfMonth = formatDate(currentDate); // current day is the end of the month\n\n        // Fetch performance data (GMV, flash sales, etc.) for yesterday\n        const yesterdayPerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: formattedYesterday,\n            end_time: formattedYesterday,\n            brand_id: brandId,  // Pass brandId here\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch performance data for the current week\n        const currentWeekPerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: startOfWeek,\n            end_time: formattedEndOfWeek,\n            brand_id: brandId, // Pass brandId here\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Fetch performance data for the current month\n        const monthToDatePerformanceResponse = await axios.get('/api/shop/performance', {\n          params: {\n            start_time: startOfMonth,\n            end_time: formattedEndOfMonth,\n            brand_id: brandId,  // Pass brandId here\n            page_size: 10,\n            page_no: 1\n          }\n        });\n\n        // Update the shop data state\n        setShopData({\n          yesterdayData: yesterdayPerformanceResponse.data,\n          currentWeekData: currentWeekPerformanceResponse.data,\n          monthToDateData: monthToDatePerformanceResponse.data\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [brandId, getStartOfMonth, getStartOfWeek]);\n\n  const renderTable = (data, title, period, bgColor) => (\n    <div className=\"analytics-table\">\n      <div className={`table-header ${bgColor}`}>\n        <h3>{title}</h3>\n        <span className=\"period\">{period}</span>\n      </div>\n      <div className=\"table-content\">\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">TOTAL GMV</span>\n          <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n          <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">TOP-PERFORMING CREATORS</span>\n          <span className=\"metric-value\">{data.topPerformingCreators}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">GMV PER VIDEO</span>\n          <span className=\"metric-value\">{data.gmvpervideo}</span>\n        </div>\n        <div className=\"metric-row\">\n          <span className=\"metric-label\">Refund Rate</span>\n          <span className=\"metric-value\">{data.refundrate}</span>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"shop-detail-container\">\n      <h1>Shop Details</h1>\n      <div className=\"tables-container\">\n        {renderTable(\n          shopData.yesterdayData,\n          'Yesterday',\n          `Yesterday (${formatDate(new Date())})`,\n          'header-blue'\n        )}\n        {renderTable(\n          shopData.currentWeekData,\n          'Current Week',\n          `Week (${getStartOfWeek(new Date())} - ${formatDate(new Date())})`,\n          'header-green'\n        )}\n        {renderTable(\n          shopData.monthToDateData,\n          'Month to date',\n          `Month (${getStartOfMonth(new Date())} - ${formatDate(new Date())})`,\n          'header-red'\n        )}\n      </div>\n    </div>\n    \n  );\n};\n\nexport default ShopDetailPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}