{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n\n// const Dashboard = () => {\n//   const [dashboardData, setDashboardData] = useState({\n//     yesterday: {\n//       totalGmv: 5200,\n//       tiktokCampaignOutcomes: 4800,\n//       refundRate: 5.2,\n//       flashSalesPerformance: 1200,\n//       gmvPerVideo: 185,\n//       topPerformingCreators: 12,\n//       newContentPerCreator: 3.4,\n//       affiliateJoinRate: 68\n//     },\n//     currentWeek: {\n//       totalGmv: 36400,\n//       tiktokCampaignOutcomes: 32800,\n//       refundRate: 4.8,\n//       flashSalesPerformance: 8200,\n//       gmvPerVideo: 220,\n//       topPerformingCreators: 45,\n//       newContentPerCreator: 4.2,\n//       affiliateJoinRate: 72\n//     },\n//     monthToDate: {\n//       totalGmv: 156000,\n//       tiktokCampaignOutcomes: 142000,\n//       refundRate: 5.1,\n//       flashSalesPerformance: 38000,\n//       gmvPerVideo: 195,\n//       topPerformingCreators: 180,\n//       newContentPerCreator: 3.8,\n//       affiliateJoinRate: 74\n//     }\n//   });\n\n//   useEffect(() => {\n//     // Simulate fetching data\n//     setTimeout(() => {\n//       setDashboardData({\n//         yesterday: {\n//           totalGmv: 5200,\n//           tiktokCampaignOutcomes: 4800,\n//           refundRate: 5.2,\n//           flashSalesPerformance: 1200,\n//           gmvPerVideo: 185,\n//           topPerformingCreators: 12,\n//           newContentPerCreator: 3.4,\n//           affiliateJoinRate: 68\n//         },\n//         currentWeek: {\n//           totalGmv: 36400,\n//           tiktokCampaignOutcomes: 32800,\n//           refundRate: 4.8,\n//           flashSalesPerformance: 8200,\n//           gmvPerVideo: 220,\n//           topPerformingCreators: 45,\n//           newContentPerCreator: 4.2,\n//           affiliateJoinRate: 72\n//         },\n//         monthToDate: {\n//           totalGmv: 156000,\n//           tiktokCampaignOutcomes: 142000,\n//           refundRate: 5.1,\n//           flashSalesPerformance: 38000,\n//           gmvPerVideo: 195,\n//           topPerformingCreators: 180,\n//           newContentPerCreator: 3.8,\n//           affiliateJoinRate: 74\n//         }\n//       });\n//     }, 1000);\n//   }, []);\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD',\n//       minimumFractionDigits: 2\n//     }).format(amount);\n//   };\n\n//   const calculatePercentage = (value, total) => {\n//     if (total === 0) return '0.0%';\n//     return ((value / total) * 100).toFixed(1) + '%';\n//   };\n\n//   const formatPercentage = (value) => {\n//     return value.toFixed(1) + '%';\n//   };\n\n//   const formatNumber = (value) => {\n//     return value.toLocaleString();\n//   };\n\n//   const renderTable = (data, title, period, bgColor) => (\n//     <div className=\"analytics-table\">\n//       <div className={`table-header ${bgColor}`}>\n//         <h3>{title}</h3>\n//         <span className=\"period\">{period}</span>\n//       </div>\n//       <div className=\"table-content\">\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TOTAL GMV</span>\n//           <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TIKTOK SHOP CAMPAIGN OUTCOMES</span>\n//           <span className=\"metric-value\">{formatCurrency(data.tiktokCampaignOutcomes)}</span>\n//           <span className=\"metric-percentage\">{calculatePercentage(data.tiktokCampaignOutcomes, data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">REFUND RATE & TRENDS</span>\n//           <span className=\"metric-value\">{formatPercentage(data.refundRate)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n//           <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n//           <span className=\"metric-percentage\">{calculatePercentage(data.flashSalesPerformance, data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">GMV PER VIDEO/CONTENT</span>\n//           <span className=\"metric-value\">{formatCurrency(data.gmvPerVideo)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TOP-PERFORMING CREATORS</span>\n//           <span className=\"metric-value\">{formatNumber(data.topPerformingCreators)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">NEW CONTENT PER CREATOR</span>\n//           <span className=\"metric-value\">{data.newContentPerCreator.toFixed(1)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">AFFILIATE JOIN RATE & CONVERSION</span>\n//           <span className=\"metric-value\">{formatPercentage(data.affiliateJoinRate)}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <div className=\"dashboard-header\">\n//         <h1>Analytics Dashboard</h1>\n//         <div className=\"time-filter\">\n//           <button className=\"filter-btn active\">Yesterday / Current Week / Month to date</button>\n//           <button className=\"fixed-expenses-btn\">Fixed Expenses</button>\n//         </div>\n//       </div>\n\n//       <div className=\"tables-container\">\n//         {renderTable(\n//           dashboardData.yesterday, \n//           'Yesterday', \n//           '27 May 2025', \n//           'header-blue'\n//         )}\n//         {renderTable(\n//           dashboardData.currentWeek, \n//           'Current Week', \n//           '26 - 28 May 2025', \n//           'header-green'\n//         )}\n//         {renderTable(\n//           dashboardData.monthToDate, \n//           'Month to date', \n//           '1 - 28 May 2025', \n//           'header-red'\n//         )}\n//       </div>\n\n//       <div className=\"product-table-section\">\n//         <table className=\"product-table\">\n//           <thead>\n//             <tr>\n//               <th>Product</th>\n//               <th>Retail Price</th>\n//               <th>Units Sold (Quantity)</th>\n//               <th>Sample (Quantity)</th>\n//               <th>Total Units (Sold & Sample)</th>\n//               <th>GMV</th>\n//               <th>Fulfillment & Shipping (FBT & FBS)</th>\n//               <th>Total COGS (Sold & Samples)</th>\n//               <th>Affiliate Commission</th>\n//               <th>% Tax Refunds</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             <tr>\n//               <td colSpan=\"10\" className=\"no-data\">\n//                 <div className=\"empty-state\">\n//                   <div className=\"empty-icon\">ðŸ“¦</div>\n//                   <p>No orders found on 27 May 2025</p>\n//                 </div>\n//               </td>\n//             </tr>\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// // Add this CSS to your Dashboard.css file or include as a style tag\n// const styles = `\n// .dashboard-container {\n//   padding: 20px;\n//   background-color: #f5f5f5;\n//   min-height: 100vh;\n//   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n// }\n\n// .dashboard-header {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   margin-bottom: 20px;\n// }\n\n// .dashboard-header h1 {\n//   margin: 0;\n//   color: #333;\n//   font-size: 24px;\n//   font-weight: 600;\n// }\n\n// .time-filter {\n//   display: flex;\n//   gap: 10px;\n// }\n\n// .filter-btn, .fixed-expenses-btn {\n//   padding: 8px 16px;\n//   border: 1px solid #ddd;\n//   background: white;\n//   border-radius: 4px;\n//   cursor: pointer;\n//   font-size: 14px;\n// }\n\n// .filter-btn.active {\n//   background: #007bff;\n//   color: white;\n//   border-color: #007bff;\n// }\n\n// .fixed-expenses-btn {\n//   background: #ff6b35;\n//   color: white;\n//   border-color: #ff6b35;\n// }\n\n// .tables-container {\n//   display: grid;\n//   grid-template-columns: 1fr 1fr 1fr;\n//   gap: 20px;\n//   margin-bottom: 30px;\n// }\n\n// .analytics-table {\n//   background: white;\n//   border-radius: 8px;\n//   overflow: hidden;\n//   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n// }\n\n// .table-header {\n//   padding: 16px 20px;\n//   color: white;\n//   font-weight: 600;\n// }\n\n// .header-blue {\n//   background: linear-gradient(135deg, #4a90e2, #357abd);\n// }\n\n// .header-green {\n//   background: linear-gradient(135deg, #2ecc71, #27ae60);\n// }\n\n// .header-red {\n//   background: linear-gradient(135deg, #e74c3c, #c0392b);\n// }\n\n// .table-header h3 {\n//   margin: 0 0 4px 0;\n//   font-size: 18px;\n// }\n\n// .period {\n//   font-size: 12px;\n//   opacity: 0.9;\n// }\n\n// .table-content {\n//   padding: 20px;\n// }\n\n// .metric-row {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   padding: 8px 0;\n//   border-bottom: 1px solid #f0f0f0;\n//   position: relative;\n// }\n\n// .metric-row:last-child {\n//   border-bottom: none;\n// }\n\n// .metric-label {\n//   font-size: 12px;\n//   color: #666;\n//   font-weight: 500;\n//   flex: 1;\n// }\n\n// .metric-value {\n//   font-size: 14px;\n//   font-weight: 600;\n//   color: #333;\n//   margin-right: 10px;\n// }\n\n// .metric-percentage {\n//   font-size: 12px;\n//   color: #888;\n//   min-width: 50px;\n//   text-align: right;\n// }\n\n// .product-table-section {\n//   background: white;\n//   border-radius: 8px;\n//   overflow: hidden;\n//   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n// }\n\n// .product-table {\n//   width: 100%;\n//   border-collapse: collapse;\n// }\n\n// .product-table th {\n//   background: #f8f9fa;\n//   padding: 12px 8px;\n//   text-align: left;\n//   font-size: 11px;\n//   font-weight: 600;\n//   color: #555;\n//   border-bottom: 1px solid #dee2e6;\n// }\n\n// .product-table td {\n//   padding: 12px 8px;\n//   border-bottom: 1px solid #f0f0f0;\n//   font-size: 12px;\n// }\n\n// .no-data {\n//   text-align: center;\n//   padding: 40px !important;\n// }\n\n// .empty-state {\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   color: #999;\n// }\n\n// .empty-icon {\n//   font-size: 48px;\n//   margin-bottom: 10px;\n//   opacity: 0.5;\n// }\n\n// .empty-state p {\n//   margin: 0;\n//   font-size: 14px;\n// }\n\n// @media (max-width: 768px) {\n//   .tables-container {\n//     grid-template-columns: 1fr;\n//     gap: 15px;\n//   }\n// }\n\n// @media (max-width: 768px) {\n//   .dashboard-header {\n//     flex-direction: column;\n//     gap: 15px;\n//     align-items: stretch;\n//   }\n\n//   .product-table {\n//     font-size: 10px;\n//   }\n\n//   .product-table th,\n//   .product-table td {\n//     padding: 8px 4px;\n//   }\n// }\n// `;\n\n// // Inject styles\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = styles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// =========================================================================","map":{"version":3,"names":[],"sources":["/Users/zeghamali/Desktop/TT_shop_Dashboard/frontend/src/components/Dashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n\n// const Dashboard = () => {\n//   const [dashboardData, setDashboardData] = useState({\n//     yesterday: {\n//       totalGmv: 5200,\n//       tiktokCampaignOutcomes: 4800,\n//       refundRate: 5.2,\n//       flashSalesPerformance: 1200,\n//       gmvPerVideo: 185,\n//       topPerformingCreators: 12,\n//       newContentPerCreator: 3.4,\n//       affiliateJoinRate: 68\n//     },\n//     currentWeek: {\n//       totalGmv: 36400,\n//       tiktokCampaignOutcomes: 32800,\n//       refundRate: 4.8,\n//       flashSalesPerformance: 8200,\n//       gmvPerVideo: 220,\n//       topPerformingCreators: 45,\n//       newContentPerCreator: 4.2,\n//       affiliateJoinRate: 72\n//     },\n//     monthToDate: {\n//       totalGmv: 156000,\n//       tiktokCampaignOutcomes: 142000,\n//       refundRate: 5.1,\n//       flashSalesPerformance: 38000,\n//       gmvPerVideo: 195,\n//       topPerformingCreators: 180,\n//       newContentPerCreator: 3.8,\n//       affiliateJoinRate: 74\n//     }\n//   });\n\n//   useEffect(() => {\n//     // Simulate fetching data\n//     setTimeout(() => {\n//       setDashboardData({\n//         yesterday: {\n//           totalGmv: 5200,\n//           tiktokCampaignOutcomes: 4800,\n//           refundRate: 5.2,\n//           flashSalesPerformance: 1200,\n//           gmvPerVideo: 185,\n//           topPerformingCreators: 12,\n//           newContentPerCreator: 3.4,\n//           affiliateJoinRate: 68\n//         },\n//         currentWeek: {\n//           totalGmv: 36400,\n//           tiktokCampaignOutcomes: 32800,\n//           refundRate: 4.8,\n//           flashSalesPerformance: 8200,\n//           gmvPerVideo: 220,\n//           topPerformingCreators: 45,\n//           newContentPerCreator: 4.2,\n//           affiliateJoinRate: 72\n//         },\n//         monthToDate: {\n//           totalGmv: 156000,\n//           tiktokCampaignOutcomes: 142000,\n//           refundRate: 5.1,\n//           flashSalesPerformance: 38000,\n//           gmvPerVideo: 195,\n//           topPerformingCreators: 180,\n//           newContentPerCreator: 3.8,\n//           affiliateJoinRate: 74\n//         }\n//       });\n//     }, 1000);\n//   }, []);\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD',\n//       minimumFractionDigits: 2\n//     }).format(amount);\n//   };\n\n//   const calculatePercentage = (value, total) => {\n//     if (total === 0) return '0.0%';\n//     return ((value / total) * 100).toFixed(1) + '%';\n//   };\n\n//   const formatPercentage = (value) => {\n//     return value.toFixed(1) + '%';\n//   };\n\n//   const formatNumber = (value) => {\n//     return value.toLocaleString();\n//   };\n\n//   const renderTable = (data, title, period, bgColor) => (\n//     <div className=\"analytics-table\">\n//       <div className={`table-header ${bgColor}`}>\n//         <h3>{title}</h3>\n//         <span className=\"period\">{period}</span>\n//       </div>\n//       <div className=\"table-content\">\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TOTAL GMV</span>\n//           <span className=\"metric-value\">{formatCurrency(data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TIKTOK SHOP CAMPAIGN OUTCOMES</span>\n//           <span className=\"metric-value\">{formatCurrency(data.tiktokCampaignOutcomes)}</span>\n//           <span className=\"metric-percentage\">{calculatePercentage(data.tiktokCampaignOutcomes, data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">REFUND RATE & TRENDS</span>\n//           <span className=\"metric-value\">{formatPercentage(data.refundRate)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">FLASH SALES PERFORMANCE</span>\n//           <span className=\"metric-value\">{formatCurrency(data.flashSalesPerformance)}</span>\n//           <span className=\"metric-percentage\">{calculatePercentage(data.flashSalesPerformance, data.totalGmv)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">GMV PER VIDEO/CONTENT</span>\n//           <span className=\"metric-value\">{formatCurrency(data.gmvPerVideo)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">TOP-PERFORMING CREATORS</span>\n//           <span className=\"metric-value\">{formatNumber(data.topPerformingCreators)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">NEW CONTENT PER CREATOR</span>\n//           <span className=\"metric-value\">{data.newContentPerCreator.toFixed(1)}</span>\n//         </div>\n//         <div className=\"metric-row\">\n//           <span className=\"metric-label\">AFFILIATE JOIN RATE & CONVERSION</span>\n//           <span className=\"metric-value\">{formatPercentage(data.affiliateJoinRate)}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <div className=\"dashboard-header\">\n//         <h1>Analytics Dashboard</h1>\n//         <div className=\"time-filter\">\n//           <button className=\"filter-btn active\">Yesterday / Current Week / Month to date</button>\n//           <button className=\"fixed-expenses-btn\">Fixed Expenses</button>\n//         </div>\n//       </div>\n      \n//       <div className=\"tables-container\">\n//         {renderTable(\n//           dashboardData.yesterday, \n//           'Yesterday', \n//           '27 May 2025', \n//           'header-blue'\n//         )}\n//         {renderTable(\n//           dashboardData.currentWeek, \n//           'Current Week', \n//           '26 - 28 May 2025', \n//           'header-green'\n//         )}\n//         {renderTable(\n//           dashboardData.monthToDate, \n//           'Month to date', \n//           '1 - 28 May 2025', \n//           'header-red'\n//         )}\n//       </div>\n\n//       <div className=\"product-table-section\">\n//         <table className=\"product-table\">\n//           <thead>\n//             <tr>\n//               <th>Product</th>\n//               <th>Retail Price</th>\n//               <th>Units Sold (Quantity)</th>\n//               <th>Sample (Quantity)</th>\n//               <th>Total Units (Sold & Sample)</th>\n//               <th>GMV</th>\n//               <th>Fulfillment & Shipping (FBT & FBS)</th>\n//               <th>Total COGS (Sold & Samples)</th>\n//               <th>Affiliate Commission</th>\n//               <th>% Tax Refunds</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             <tr>\n//               <td colSpan=\"10\" className=\"no-data\">\n//                 <div className=\"empty-state\">\n//                   <div className=\"empty-icon\">ðŸ“¦</div>\n//                   <p>No orders found on 27 May 2025</p>\n//                 </div>\n//               </td>\n//             </tr>\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// // Add this CSS to your Dashboard.css file or include as a style tag\n// const styles = `\n// .dashboard-container {\n//   padding: 20px;\n//   background-color: #f5f5f5;\n//   min-height: 100vh;\n//   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n// }\n\n// .dashboard-header {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   margin-bottom: 20px;\n// }\n\n// .dashboard-header h1 {\n//   margin: 0;\n//   color: #333;\n//   font-size: 24px;\n//   font-weight: 600;\n// }\n\n// .time-filter {\n//   display: flex;\n//   gap: 10px;\n// }\n\n// .filter-btn, .fixed-expenses-btn {\n//   padding: 8px 16px;\n//   border: 1px solid #ddd;\n//   background: white;\n//   border-radius: 4px;\n//   cursor: pointer;\n//   font-size: 14px;\n// }\n\n// .filter-btn.active {\n//   background: #007bff;\n//   color: white;\n//   border-color: #007bff;\n// }\n\n// .fixed-expenses-btn {\n//   background: #ff6b35;\n//   color: white;\n//   border-color: #ff6b35;\n// }\n\n// .tables-container {\n//   display: grid;\n//   grid-template-columns: 1fr 1fr 1fr;\n//   gap: 20px;\n//   margin-bottom: 30px;\n// }\n\n// .analytics-table {\n//   background: white;\n//   border-radius: 8px;\n//   overflow: hidden;\n//   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n// }\n\n// .table-header {\n//   padding: 16px 20px;\n//   color: white;\n//   font-weight: 600;\n// }\n\n// .header-blue {\n//   background: linear-gradient(135deg, #4a90e2, #357abd);\n// }\n\n// .header-green {\n//   background: linear-gradient(135deg, #2ecc71, #27ae60);\n// }\n\n// .header-red {\n//   background: linear-gradient(135deg, #e74c3c, #c0392b);\n// }\n\n// .table-header h3 {\n//   margin: 0 0 4px 0;\n//   font-size: 18px;\n// }\n\n// .period {\n//   font-size: 12px;\n//   opacity: 0.9;\n// }\n\n// .table-content {\n//   padding: 20px;\n// }\n\n// .metric-row {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   padding: 8px 0;\n//   border-bottom: 1px solid #f0f0f0;\n//   position: relative;\n// }\n\n// .metric-row:last-child {\n//   border-bottom: none;\n// }\n\n// .metric-label {\n//   font-size: 12px;\n//   color: #666;\n//   font-weight: 500;\n//   flex: 1;\n// }\n\n// .metric-value {\n//   font-size: 14px;\n//   font-weight: 600;\n//   color: #333;\n//   margin-right: 10px;\n// }\n\n// .metric-percentage {\n//   font-size: 12px;\n//   color: #888;\n//   min-width: 50px;\n//   text-align: right;\n// }\n\n// .product-table-section {\n//   background: white;\n//   border-radius: 8px;\n//   overflow: hidden;\n//   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n// }\n\n// .product-table {\n//   width: 100%;\n//   border-collapse: collapse;\n// }\n\n// .product-table th {\n//   background: #f8f9fa;\n//   padding: 12px 8px;\n//   text-align: left;\n//   font-size: 11px;\n//   font-weight: 600;\n//   color: #555;\n//   border-bottom: 1px solid #dee2e6;\n// }\n\n// .product-table td {\n//   padding: 12px 8px;\n//   border-bottom: 1px solid #f0f0f0;\n//   font-size: 12px;\n// }\n\n// .no-data {\n//   text-align: center;\n//   padding: 40px !important;\n// }\n\n// .empty-state {\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   color: #999;\n// }\n\n// .empty-icon {\n//   font-size: 48px;\n//   margin-bottom: 10px;\n//   opacity: 0.5;\n// }\n\n// .empty-state p {\n//   margin: 0;\n//   font-size: 14px;\n// }\n\n// @media (max-width: 768px) {\n//   .tables-container {\n//     grid-template-columns: 1fr;\n//     gap: 15px;\n//   }\n// }\n\n// @media (max-width: 768px) {\n//   .dashboard-header {\n//     flex-direction: column;\n//     gap: 15px;\n//     align-items: stretch;\n//   }\n  \n//   .product-table {\n//     font-size: 10px;\n//   }\n  \n//   .product-table th,\n//   .product-table td {\n//     padding: 8px 4px;\n//   }\n// }\n// `;\n\n// // Inject styles\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = styles;\n//   document.head.appendChild(styleSheet);\n// }\n\n\n\n\n\n\n// =========================================================================\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAOA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}